id: VST.Device.LightingController
language: CSharp
name:
  Default: VST.Device.LightingController
qualifiedName:
  Default: VST.Device.LightingController
type: Assembly
modifiers: {}
items:
- id: VST.Device.LightingController
  commentId: N:VST.Device.LightingController
  language: CSharp
  name:
    CSharp: VST.Device.LightingController
    VB: VST.Device.LightingController
  nameWithType:
    CSharp: VST.Device.LightingController
    VB: VST.Device.LightingController
  qualifiedName:
    CSharp: VST.Device.LightingController
    VB: VST.Device.LightingController
  type: Namespace
  assemblies:
  - VST.Device.LightingController
  modifiers: {}
  items:
  - id: VST.Device.LightingController.ChannelController
    commentId: T:VST.Device.LightingController.ChannelController
    language: CSharp
    name:
      CSharp: ChannelController
      VB: ChannelController
    nameWithType:
      CSharp: ChannelController
      VB: ChannelController
    qualifiedName:
      CSharp: VST.Device.LightingController.ChannelController
      VB: VST.Device.LightingController.ChannelController
    type: Class
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/ChannelController.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: ChannelController
      path: ../src/VST.Device.LightingController/ChannelController.cs
      startLine: 4
    syntax:
      content:
        CSharp: 'public class ChannelController : IChannelController, IInitialize'
        VB: >-
          Public Class ChannelController

              Implements IChannelController, IInitialize
    inheritance:
    - System.Object
    implements:
    - VST.Device.LightingController.IChannelController
    - VST.Device.LightingController.IInitialize
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: VST.Device.LightingController.ChannelController.Index
      commentId: P:VST.Device.LightingController.ChannelController.Index
      language: CSharp
      name:
        CSharp: Index
        VB: Index
      nameWithType:
        CSharp: ChannelController.Index
        VB: ChannelController.Index
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.Index
        VB: VST.Device.LightingController.ChannelController.Index
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Index
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 6
      syntax:
        content:
          CSharp: public int Index { get; }
          VB: Public ReadOnly Property Index As Integer
        parameters: []
        return:
          type: System.Int32
      overload: VST.Device.LightingController.ChannelController.Index*
      implements:
      - VST.Device.LightingController.IChannelController.Index
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.ChannelController.IsOn
      commentId: P:VST.Device.LightingController.ChannelController.IsOn
      language: CSharp
      name:
        CSharp: IsOn
        VB: IsOn
      nameWithType:
        CSharp: ChannelController.IsOn
        VB: ChannelController.IsOn
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.IsOn
        VB: VST.Device.LightingController.ChannelController.IsOn
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: IsOn
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 7
      syntax:
        content:
          CSharp: public bool? IsOn { get; }
          VB: Public ReadOnly Property IsOn As Boolean?
        parameters: []
        return:
          type: System.Nullable{System.Boolean}
      overload: VST.Device.LightingController.ChannelController.IsOn*
      implements:
      - VST.Device.LightingController.IChannelController.IsOn
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.ChannelController.Mode
      commentId: P:VST.Device.LightingController.ChannelController.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: ChannelController.Mode
        VB: ChannelController.Mode
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.Mode
        VB: VST.Device.LightingController.ChannelController.Mode
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Mode
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 8
      syntax:
        content:
          CSharp: public StrobeModes? Mode { get; }
          VB: Public ReadOnly Property Mode As StrobeModes?
        parameters: []
        return:
          type: System.Nullable{VST.Device.LightingController.StrobeModes}
      overload: VST.Device.LightingController.ChannelController.Mode*
      implements:
      - VST.Device.LightingController.IChannelController.Mode
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.ChannelController.Intensity
      commentId: P:VST.Device.LightingController.ChannelController.Intensity
      language: CSharp
      name:
        CSharp: Intensity
        VB: Intensity
      nameWithType:
        CSharp: ChannelController.Intensity
        VB: ChannelController.Intensity
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.Intensity
        VB: VST.Device.LightingController.ChannelController.Intensity
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Intensity
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 9
      syntax:
        content:
          CSharp: public int? Intensity { get; }
          VB: Public ReadOnly Property Intensity As Integer?
        parameters: []
        return:
          type: System.Nullable{System.Int32}
      overload: VST.Device.LightingController.ChannelController.Intensity*
      implements:
      - VST.Device.LightingController.IChannelController.Intensity
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.ChannelController.Owner
      commentId: P:VST.Device.LightingController.ChannelController.Owner
      language: CSharp
      name:
        CSharp: Owner
        VB: Owner
      nameWithType:
        CSharp: ChannelController.Owner
        VB: ChannelController.Owner
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.Owner
        VB: VST.Device.LightingController.ChannelController.Owner
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Owner
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 11
      syntax:
        content:
          CSharp: public ILightingController Owner { get; }
          VB: Public ReadOnly Property Owner As ILightingController
        parameters: []
        return:
          type: VST.Device.LightingController.ILightingController
      overload: VST.Device.LightingController.ChannelController.Owner*
      implements:
      - VST.Device.LightingController.IChannelController.Owner
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.ChannelController.#ctor(VST.Device.LightingController.ILightingController,System.Int32)
      commentId: M:VST.Device.LightingController.ChannelController.#ctor(VST.Device.LightingController.ILightingController,System.Int32)
      language: CSharp
      name:
        CSharp: ChannelController(ILightingController, Int32)
        VB: ChannelController(ILightingController, Int32)
      nameWithType:
        CSharp: ChannelController.ChannelController(ILightingController, Int32)
        VB: ChannelController.ChannelController(ILightingController, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.ChannelController(VST.Device.LightingController.ILightingController, System.Int32)
        VB: VST.Device.LightingController.ChannelController.ChannelController(VST.Device.LightingController.ILightingController, System.Int32)
      type: Constructor
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: .ctor
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 13
      syntax:
        content:
          CSharp: public ChannelController(ILightingController owner, int index)
          VB: Public Sub New(owner As ILightingController, index As Integer)
        parameters:
        - id: owner
          type: VST.Device.LightingController.ILightingController
        - id: index
          type: System.Int32
      overload: VST.Device.LightingController.ChannelController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.ChannelController.SendCommand(System.String)
      commentId: M:VST.Device.LightingController.ChannelController.SendCommand(System.String)
      language: CSharp
      name:
        CSharp: SendCommand(String)
        VB: SendCommand(String)
      nameWithType:
        CSharp: ChannelController.SendCommand(String)
        VB: ChannelController.SendCommand(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.SendCommand(System.String)
        VB: VST.Device.LightingController.ChannelController.SendCommand(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SendCommand
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 19
      syntax:
        content:
          CSharp: public void SendCommand(string command)
          VB: Public Sub SendCommand(command As String)
        parameters:
        - id: command
          type: System.String
      overload: VST.Device.LightingController.ChannelController.SendCommand*
      implements:
      - VST.Device.LightingController.IChannelController.SendCommand(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.ChannelController.SetIntensity(System.Int32)
      commentId: M:VST.Device.LightingController.ChannelController.SetIntensity(System.Int32)
      language: CSharp
      name:
        CSharp: SetIntensity(Int32)
        VB: SetIntensity(Int32)
      nameWithType:
        CSharp: ChannelController.SetIntensity(Int32)
        VB: ChannelController.SetIntensity(Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.SetIntensity(System.Int32)
        VB: VST.Device.LightingController.ChannelController.SetIntensity(System.Int32)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetIntensity
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 24
      syntax:
        content:
          CSharp: public void SetIntensity(int intensity)
          VB: Public Sub SetIntensity(intensity As Integer)
        parameters:
        - id: intensity
          type: System.Int32
      overload: VST.Device.LightingController.ChannelController.SetIntensity*
      implements:
      - VST.Device.LightingController.IChannelController.SetIntensity(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.ChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
      commentId: M:VST.Device.LightingController.ChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
      language: CSharp
      name:
        CSharp: SetStrobeMode(StrobeModes)
        VB: SetStrobeMode(StrobeModes)
      nameWithType:
        CSharp: ChannelController.SetStrobeMode(StrobeModes)
        VB: ChannelController.SetStrobeMode(StrobeModes)
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
        VB: VST.Device.LightingController.ChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetStrobeMode
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 30
      syntax:
        content:
          CSharp: public void SetStrobeMode(StrobeModes mode)
          VB: Public Sub SetStrobeMode(mode As StrobeModes)
        parameters:
        - id: mode
          type: VST.Device.LightingController.StrobeModes
      overload: VST.Device.LightingController.ChannelController.SetStrobeMode*
      implements:
      - VST.Device.LightingController.IChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.ChannelController.SetOnOff(System.Boolean)
      commentId: M:VST.Device.LightingController.ChannelController.SetOnOff(System.Boolean)
      language: CSharp
      name:
        CSharp: SetOnOff(Boolean)
        VB: SetOnOff(Boolean)
      nameWithType:
        CSharp: ChannelController.SetOnOff(Boolean)
        VB: ChannelController.SetOnOff(Boolean)
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.SetOnOff(System.Boolean)
        VB: VST.Device.LightingController.ChannelController.SetOnOff(System.Boolean)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetOnOff
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 36
      syntax:
        content:
          CSharp: public void SetOnOff(bool mode)
          VB: Public Sub SetOnOff(mode As Boolean)
        parameters:
        - id: mode
          type: System.Boolean
      overload: VST.Device.LightingController.ChannelController.SetOnOff*
      implements:
      - VST.Device.LightingController.IChannelController.SetOnOff(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.ChannelController.Initialize
      commentId: M:VST.Device.LightingController.ChannelController.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: ChannelController.Initialize()
        VB: ChannelController.Initialize()
      qualifiedName:
        CSharp: VST.Device.LightingController.ChannelController.Initialize()
        VB: VST.Device.LightingController.ChannelController.Initialize()
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/ChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Initialize
        path: ../src/VST.Device.LightingController/ChannelController.cs
        startLine: 42
      syntax:
        content:
          CSharp: public void Initialize()
          VB: Public Sub Initialize
      overload: VST.Device.LightingController.ChannelController.Initialize*
      implements:
      - VST.Device.LightingController.IInitialize.Initialize
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: VST.Device.LightingController.DefaultLightingController
    commentId: T:VST.Device.LightingController.DefaultLightingController
    language: CSharp
    name:
      CSharp: DefaultLightingController
      VB: DefaultLightingController
    nameWithType:
      CSharp: DefaultLightingController
      VB: DefaultLightingController
    qualifiedName:
      CSharp: VST.Device.LightingController.DefaultLightingController
      VB: VST.Device.LightingController.DefaultLightingController
    type: Class
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/DefaultLightingController.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: DefaultLightingController
      path: ../src/VST.Device.LightingController/DefaultLightingController.cs
      startLine: 7
    syntax:
      content:
        CSharp: 'public abstract class DefaultLightingController : ILightingController, IInitialize'
        VB: >-
          Public MustInherit Class DefaultLightingController

              Implements ILightingController, IInitialize
    inheritance:
    - System.Object
    implements:
    - VST.Device.LightingController.ILightingController
    - VST.Device.LightingController.IInitialize
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: VST.Device.LightingController.DefaultLightingController._channelControllers
      commentId: F:VST.Device.LightingController.DefaultLightingController._channelControllers
      language: CSharp
      name:
        CSharp: _channelControllers
        VB: _channelControllers
      nameWithType:
        CSharp: DefaultLightingController._channelControllers
        VB: DefaultLightingController._channelControllers
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController._channelControllers
        VB: VST.Device.LightingController.DefaultLightingController._channelControllers
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: _channelControllers
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 9
      syntax:
        content:
          CSharp: protected Dictionary<int, IChannelController> _channelControllers
          VB: Protected _channelControllers As Dictionary(Of Integer, IChannelController)
        return:
          type: System.Collections.Generic.Dictionary{System.Int32,VST.Device.LightingController.IChannelController}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: VST.Device.LightingController.DefaultLightingController.strobeMode
      commentId: F:VST.Device.LightingController.DefaultLightingController.strobeMode
      language: CSharp
      name:
        CSharp: strobeMode
        VB: strobeMode
      nameWithType:
        CSharp: DefaultLightingController.strobeMode
        VB: DefaultLightingController.strobeMode
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.strobeMode
        VB: VST.Device.LightingController.DefaultLightingController.strobeMode
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: strobeMode
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 10
      syntax:
        content:
          CSharp: protected StrobeModes strobeMode
          VB: Protected strobeMode As StrobeModes
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: VST.Device.LightingController.DefaultLightingController.CommandSent
      commentId: P:VST.Device.LightingController.DefaultLightingController.CommandSent
      language: CSharp
      name:
        CSharp: CommandSent
        VB: CommandSent
      nameWithType:
        CSharp: DefaultLightingController.CommandSent
        VB: DefaultLightingController.CommandSent
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.CommandSent
        VB: VST.Device.LightingController.DefaultLightingController.CommandSent
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommandSent
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 12
      syntax:
        content:
          CSharp: public abstract EventHandler<string> CommandSent { get; set; }
          VB: Public MustOverride Property CommandSent As EventHandler(Of String)
        parameters: []
        return:
          type: System.EventHandler{System.String}
      overload: VST.Device.LightingController.DefaultLightingController.CommandSent*
      implements:
      - VST.Device.LightingController.ILightingController.CommandSent
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        - set
        VB:
        - Public
        - MustOverride
    - id: VST.Device.LightingController.DefaultLightingController.HostName
      commentId: P:VST.Device.LightingController.DefaultLightingController.HostName
      language: CSharp
      name:
        CSharp: HostName
        VB: HostName
      nameWithType:
        CSharp: DefaultLightingController.HostName
        VB: DefaultLightingController.HostName
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.HostName
        VB: VST.Device.LightingController.DefaultLightingController.HostName
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: HostName
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 13
      syntax:
        content:
          CSharp: public abstract string HostName { get; protected set; }
          VB: Public MustOverride Property HostName As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.DefaultLightingController.HostName*
      implements:
      - VST.Device.LightingController.ILightingController.HostName
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        - protected set
        VB:
        - Public
        - MustOverride
        - Get
        - Protected Set
    - id: VST.Device.LightingController.DefaultLightingController.Delay
      commentId: P:VST.Device.LightingController.DefaultLightingController.Delay
      language: CSharp
      name:
        CSharp: Delay
        VB: Delay
      nameWithType:
        CSharp: DefaultLightingController.Delay
        VB: DefaultLightingController.Delay
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.Delay
        VB: VST.Device.LightingController.DefaultLightingController.Delay
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Delay
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 14
      syntax:
        content:
          CSharp: public abstract int Delay { get; protected set; }
          VB: Public MustOverride Property Delay As Integer
        parameters: []
        return:
          type: System.Int32
      overload: VST.Device.LightingController.DefaultLightingController.Delay*
      implements:
      - VST.Device.LightingController.ILightingController.Delay
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        - protected set
        VB:
        - Public
        - MustOverride
        - Get
        - Protected Set
    - id: VST.Device.LightingController.DefaultLightingController.IsConnected
      commentId: P:VST.Device.LightingController.DefaultLightingController.IsConnected
      language: CSharp
      name:
        CSharp: IsConnected
        VB: IsConnected
      nameWithType:
        CSharp: DefaultLightingController.IsConnected
        VB: DefaultLightingController.IsConnected
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.IsConnected
        VB: VST.Device.LightingController.DefaultLightingController.IsConnected
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: IsConnected
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 15
      syntax:
        content:
          CSharp: public abstract bool IsConnected { get; }
          VB: Public MustOverride ReadOnly Property IsConnected As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: VST.Device.LightingController.DefaultLightingController.IsConnected*
      implements:
      - VST.Device.LightingController.ILightingController.IsConnected
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: VST.Device.LightingController.DefaultLightingController.ModelName
      commentId: P:VST.Device.LightingController.DefaultLightingController.ModelName
      language: CSharp
      name:
        CSharp: ModelName
        VB: ModelName
      nameWithType:
        CSharp: DefaultLightingController.ModelName
        VB: DefaultLightingController.ModelName
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.ModelName
        VB: VST.Device.LightingController.DefaultLightingController.ModelName
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: ModelName
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 16
      syntax:
        content:
          CSharp: public virtual string ModelName { get; protected set; }
          VB: Public Overridable Property ModelName As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.DefaultLightingController.ModelName*
      implements:
      - VST.Device.LightingController.ILightingController.ModelName
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - protected set
        VB:
        - Public
        - Overridable
        - Get
        - Protected Set
    - id: VST.Device.LightingController.DefaultLightingController.StrobeMode
      commentId: P:VST.Device.LightingController.DefaultLightingController.StrobeMode
      language: CSharp
      name:
        CSharp: StrobeMode
        VB: StrobeMode
      nameWithType:
        CSharp: DefaultLightingController.StrobeMode
        VB: DefaultLightingController.StrobeMode
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.StrobeMode
        VB: VST.Device.LightingController.DefaultLightingController.StrobeMode
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: StrobeMode
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 17
      syntax:
        content:
          CSharp: public StrobeModes StrobeMode { get; }
          VB: Public ReadOnly Property StrobeMode As StrobeModes
        parameters: []
        return:
          type: VST.Device.LightingController.StrobeModes
      overload: VST.Device.LightingController.DefaultLightingController.StrobeMode*
      implements:
      - VST.Device.LightingController.ILightingController.StrobeMode
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
      commentId: P:VST.Device.LightingController.DefaultLightingController.CommunicationInterface
      language: CSharp
      name:
        CSharp: CommunicationInterface
        VB: CommunicationInterface
      nameWithType:
        CSharp: DefaultLightingController.CommunicationInterface
        VB: DefaultLightingController.CommunicationInterface
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
        VB: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommunicationInterface
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 18
      syntax:
        content:
          CSharp: public abstract CommunicationInterfaces CommunicationInterface { get; protected set; }
          VB: Public MustOverride Property CommunicationInterface As CommunicationInterfaces
        parameters: []
        return:
          type: VST.Device.LightingController.CommunicationInterfaces
      overload: VST.Device.LightingController.DefaultLightingController.CommunicationInterface*
      implements:
      - VST.Device.LightingController.ILightingController.CommunicationInterface
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        - protected set
        VB:
        - Public
        - MustOverride
        - Get
        - Protected Set
    - id: VST.Device.LightingController.DefaultLightingController.Item(System.Int32)
      commentId: P:VST.Device.LightingController.DefaultLightingController.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: DefaultLightingController.Item[Int32]
        VB: DefaultLightingController.Item(Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.Item[System.Int32]
        VB: VST.Device.LightingController.DefaultLightingController.Item(System.Int32)
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: this[]
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 20
      syntax:
        content:
          CSharp: public IChannelController this[int index] { get; }
          VB: Public ReadOnly Property Item(index As Integer) As IChannelController
        parameters:
        - id: index
          type: System.Int32
        return:
          type: VST.Device.LightingController.IChannelController
      overload: VST.Device.LightingController.DefaultLightingController.Item*
      implements:
      - VST.Device.LightingController.ILightingController.Item(System.Int32)
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.DefaultLightingController.ChannelCount
      commentId: P:VST.Device.LightingController.DefaultLightingController.ChannelCount
      language: CSharp
      name:
        CSharp: ChannelCount
        VB: ChannelCount
      nameWithType:
        CSharp: DefaultLightingController.ChannelCount
        VB: DefaultLightingController.ChannelCount
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.ChannelCount
        VB: VST.Device.LightingController.DefaultLightingController.ChannelCount
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: ChannelCount
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 21
      syntax:
        content:
          CSharp: public int ChannelCount { get; }
          VB: Public ReadOnly Property ChannelCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: VST.Device.LightingController.DefaultLightingController.ChannelCount*
      implements:
      - VST.Device.LightingController.ILightingController.ChannelCount
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
      commentId: P:VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
      language: CSharp
      name:
        CSharp: CommandHeaderStr
        VB: CommandHeaderStr
      nameWithType:
        CSharp: DefaultLightingController.CommandHeaderStr
        VB: DefaultLightingController.CommandHeaderStr
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
        VB: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommandHeaderStr
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 22
      syntax:
        content:
          CSharp: public string CommandHeaderStr { get; }
          VB: Public ReadOnly Property CommandHeaderStr As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr*
      implements:
      - VST.Device.LightingController.ILightingController.CommandHeaderStr
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.DefaultLightingController.CommandEndStr
      commentId: P:VST.Device.LightingController.DefaultLightingController.CommandEndStr
      language: CSharp
      name:
        CSharp: CommandEndStr
        VB: CommandEndStr
      nameWithType:
        CSharp: DefaultLightingController.CommandEndStr
        VB: DefaultLightingController.CommandEndStr
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.CommandEndStr
        VB: VST.Device.LightingController.DefaultLightingController.CommandEndStr
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommandEndStr
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 23
      syntax:
        content:
          CSharp: public string CommandEndStr { get; }
          VB: Public ReadOnly Property CommandEndStr As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.DefaultLightingController.CommandEndStr*
      implements:
      - VST.Device.LightingController.ILightingController.CommandEndStr
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.DefaultLightingController.#ctor(System.String,System.Int32)
      commentId: M:VST.Device.LightingController.DefaultLightingController.#ctor(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: DefaultLightingController(String, Int32)
        VB: DefaultLightingController(String, Int32)
      nameWithType:
        CSharp: DefaultLightingController.DefaultLightingController(String, Int32)
        VB: DefaultLightingController.DefaultLightingController(String, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.DefaultLightingController(System.String, System.Int32)
        VB: VST.Device.LightingController.DefaultLightingController.DefaultLightingController(System.String, System.Int32)
      type: Constructor
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: .ctor
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 25
      syntax:
        content:
          CSharp: public DefaultLightingController(string modelName, int channels = 0)
          VB: Public Sub New(modelName As String, channels As Integer = 0)
        parameters:
        - id: modelName
          type: System.String
        - id: channels
          type: System.Int32
      overload: VST.Device.LightingController.DefaultLightingController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.DefaultLightingController.SendCommand(System.String)
      commentId: M:VST.Device.LightingController.DefaultLightingController.SendCommand(System.String)
      language: CSharp
      name:
        CSharp: SendCommand(String)
        VB: SendCommand(String)
      nameWithType:
        CSharp: DefaultLightingController.SendCommand(String)
        VB: DefaultLightingController.SendCommand(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.SendCommand(System.String)
        VB: VST.Device.LightingController.DefaultLightingController.SendCommand(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SendCommand
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 36
      syntax:
        content:
          CSharp: public abstract void SendCommand(string command)
          VB: Public MustOverride Sub SendCommand(command As String)
        parameters:
        - id: command
          type: System.String
      overload: VST.Device.LightingController.DefaultLightingController.SendCommand*
      implements:
      - VST.Device.LightingController.ILightingController.SendCommand(System.String)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: VST.Device.LightingController.DefaultLightingController.Open(System.String)
      commentId: M:VST.Device.LightingController.DefaultLightingController.Open(System.String)
      language: CSharp
      name:
        CSharp: Open(String)
        VB: Open(String)
      nameWithType:
        CSharp: DefaultLightingController.Open(String)
        VB: DefaultLightingController.Open(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.Open(System.String)
        VB: VST.Device.LightingController.DefaultLightingController.Open(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Open
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 37
      syntax:
        content:
          CSharp: public abstract void Open(string host)
          VB: Public MustOverride Sub Open(host As String)
        parameters:
        - id: host
          type: System.String
      overload: VST.Device.LightingController.DefaultLightingController.Open*
      implements:
      - VST.Device.LightingController.ILightingController.Open(System.String)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: VST.Device.LightingController.DefaultLightingController.Close
      commentId: M:VST.Device.LightingController.DefaultLightingController.Close
      language: CSharp
      name:
        CSharp: Close()
        VB: Close()
      nameWithType:
        CSharp: DefaultLightingController.Close()
        VB: DefaultLightingController.Close()
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.Close()
        VB: VST.Device.LightingController.DefaultLightingController.Close()
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Close
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 38
      syntax:
        content:
          CSharp: public abstract void Close()
          VB: Public MustOverride Sub Close
      overload: VST.Device.LightingController.DefaultLightingController.Close*
      implements:
      - VST.Device.LightingController.ILightingController.Close
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32,System.Int32)
      commentId: M:VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetIntensity(Int32, Int32)
        VB: SetIntensity(Int32, Int32)
      nameWithType:
        CSharp: DefaultLightingController.SetIntensity(Int32, Int32)
        VB: DefaultLightingController.SetIntensity(Int32, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32, System.Int32)
        VB: VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32, System.Int32)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetIntensity
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 40
      syntax:
        content:
          CSharp: public abstract void SetIntensity(int channel, int intensity)
          VB: Public MustOverride Sub SetIntensity(channel As Integer, intensity As Integer)
        parameters:
        - id: channel
          type: System.Int32
        - id: intensity
          type: System.Int32
      overload: VST.Device.LightingController.DefaultLightingController.SetIntensity*
      implements:
      - VST.Device.LightingController.ILightingController.SetIntensity(System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
      commentId: M:VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
      language: CSharp
      name:
        CSharp: SetIntensity(IChannelController, Int32)
        VB: SetIntensity(IChannelController, Int32)
      nameWithType:
        CSharp: DefaultLightingController.SetIntensity(IChannelController, Int32)
        VB: DefaultLightingController.SetIntensity(IChannelController, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController, System.Int32)
        VB: VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController, System.Int32)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetIntensity
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 43
      syntax:
        content:
          CSharp: public void SetIntensity(IChannelController channel, int intensity)
          VB: Public Sub SetIntensity(channel As IChannelController, intensity As Integer)
        parameters:
        - id: channel
          type: VST.Device.LightingController.IChannelController
        - id: intensity
          type: System.Int32
      overload: VST.Device.LightingController.DefaultLightingController.SetIntensity*
      implements:
      - VST.Device.LightingController.ILightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      commentId: M:VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      language: CSharp
      name:
        CSharp: SetStrobeMode(Int32, StrobeModes)
        VB: SetStrobeMode(Int32, StrobeModes)
      nameWithType:
        CSharp: DefaultLightingController.SetStrobeMode(Int32, StrobeModes)
        VB: DefaultLightingController.SetStrobeMode(Int32, StrobeModes)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32, VST.Device.LightingController.StrobeModes)
        VB: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32, VST.Device.LightingController.StrobeModes)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetStrobeMode
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 48
      syntax:
        content:
          CSharp: public abstract void SetStrobeMode(int channel, StrobeModes mode)
          VB: Public MustOverride Sub SetStrobeMode(channel As Integer, mode As StrobeModes)
        parameters:
        - id: channel
          type: System.Int32
        - id: mode
          type: VST.Device.LightingController.StrobeModes
      overload: VST.Device.LightingController.DefaultLightingController.SetStrobeMode*
      implements:
      - VST.Device.LightingController.ILightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
      commentId: M:VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
      language: CSharp
      name:
        CSharp: SetStrobeMode(IChannelController, StrobeModes)
        VB: SetStrobeMode(IChannelController, StrobeModes)
      nameWithType:
        CSharp: DefaultLightingController.SetStrobeMode(IChannelController, StrobeModes)
        VB: DefaultLightingController.SetStrobeMode(IChannelController, StrobeModes)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController, VST.Device.LightingController.StrobeModes)
        VB: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController, VST.Device.LightingController.StrobeModes)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetStrobeMode
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 56
      syntax:
        content:
          CSharp: public void SetStrobeMode(IChannelController channel, StrobeModes mode)
          VB: Public Sub SetStrobeMode(channel As IChannelController, mode As StrobeModes)
        parameters:
        - id: channel
          type: VST.Device.LightingController.IChannelController
        - id: mode
          type: VST.Device.LightingController.StrobeModes
      overload: VST.Device.LightingController.DefaultLightingController.SetStrobeMode*
      implements:
      - VST.Device.LightingController.ILightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32,System.Boolean)
      commentId: M:VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SetOnOff(Int32, Boolean)
        VB: SetOnOff(Int32, Boolean)
      nameWithType:
        CSharp: DefaultLightingController.SetOnOff(Int32, Boolean)
        VB: DefaultLightingController.SetOnOff(Int32, Boolean)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32, System.Boolean)
        VB: VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetOnOff
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 61
      syntax:
        content:
          CSharp: public abstract void SetOnOff(int channel, bool mode)
          VB: Public MustOverride Sub SetOnOff(channel As Integer, mode As Boolean)
        parameters:
        - id: channel
          type: System.Int32
        - id: mode
          type: System.Boolean
      overload: VST.Device.LightingController.DefaultLightingController.SetOnOff*
      implements:
      - VST.Device.LightingController.ILightingController.SetOnOff(System.Int32,System.Boolean)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
      commentId: M:VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
      language: CSharp
      name:
        CSharp: SetOnOff(IChannelController, Boolean)
        VB: SetOnOff(IChannelController, Boolean)
      nameWithType:
        CSharp: DefaultLightingController.SetOnOff(IChannelController, Boolean)
        VB: DefaultLightingController.SetOnOff(IChannelController, Boolean)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController, System.Boolean)
        VB: VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController, System.Boolean)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetOnOff
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 69
      syntax:
        content:
          CSharp: public void SetOnOff(IChannelController channel, bool mode)
          VB: Public Sub SetOnOff(channel As IChannelController, mode As Boolean)
        parameters:
        - id: channel
          type: VST.Device.LightingController.IChannelController
        - id: mode
          type: System.Boolean
      overload: VST.Device.LightingController.DefaultLightingController.SetOnOff*
      implements:
      - VST.Device.LightingController.ILightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.DefaultLightingController.CheckSum(System.String)
      commentId: M:VST.Device.LightingController.DefaultLightingController.CheckSum(System.String)
      language: CSharp
      name:
        CSharp: CheckSum(String)
        VB: CheckSum(String)
      nameWithType:
        CSharp: DefaultLightingController.CheckSum(String)
        VB: DefaultLightingController.CheckSum(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.CheckSum(System.String)
        VB: VST.Device.LightingController.DefaultLightingController.CheckSum(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CheckSum
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 74
      syntax:
        content:
          CSharp: public string CheckSum(string command)
          VB: Public Function CheckSum(command As String) As String
        parameters:
        - id: command
          type: System.String
        return:
          type: System.String
      overload: VST.Device.LightingController.DefaultLightingController.CheckSum*
      implements:
      - VST.Device.LightingController.ILightingController.CheckSum(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.DefaultLightingController.Initialize
      commentId: M:VST.Device.LightingController.DefaultLightingController.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: DefaultLightingController.Initialize()
        VB: DefaultLightingController.Initialize()
      qualifiedName:
        CSharp: VST.Device.LightingController.DefaultLightingController.Initialize()
        VB: VST.Device.LightingController.DefaultLightingController.Initialize()
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/DefaultLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Initialize
        path: ../src/VST.Device.LightingController/DefaultLightingController.cs
        startLine: 80
      syntax:
        content:
          CSharp: public abstract void Initialize()
          VB: Public MustOverride Sub Initialize
      overload: VST.Device.LightingController.DefaultLightingController.Initialize*
      implements:
      - VST.Device.LightingController.IInitialize.Initialize
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: VST.Device.LightingController.EthernetLightingController
    commentId: T:VST.Device.LightingController.EthernetLightingController
    language: CSharp
    name:
      CSharp: EthernetLightingController
      VB: EthernetLightingController
    nameWithType:
      CSharp: EthernetLightingController
      VB: EthernetLightingController
    qualifiedName:
      CSharp: VST.Device.LightingController.EthernetLightingController
      VB: VST.Device.LightingController.EthernetLightingController
    type: Class
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/EthernetLightingController.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: EthernetLightingController
      path: ../src/VST.Device.LightingController/EthernetLightingController.cs
      startLine: 8
    syntax:
      content:
        CSharp: 'public class EthernetLightingController : DefaultLightingController, ILightingController, IInitialize, IEthernet, ICommunicationInterfaces'
        VB: >-
          Public Class EthernetLightingController

              Inherits DefaultLightingController

              Implements ILightingController, IInitialize, IEthernet, ICommunicationInterfaces
    inheritance:
    - System.Object
    - VST.Device.LightingController.DefaultLightingController
    implements:
    - VST.Device.LightingController.ILightingController
    - VST.Device.LightingController.IInitialize
    - VST.Device.LightingController.IEthernet
    - VST.Device.LightingController.ICommunicationInterfaces
    inheritedMembers:
    - VST.Device.LightingController.DefaultLightingController._channelControllers
    - VST.Device.LightingController.DefaultLightingController.strobeMode
    - VST.Device.LightingController.DefaultLightingController.ModelName
    - VST.Device.LightingController.DefaultLightingController.StrobeMode
    - VST.Device.LightingController.DefaultLightingController.Item(System.Int32)
    - VST.Device.LightingController.DefaultLightingController.ChannelCount
    - VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
    - VST.Device.LightingController.DefaultLightingController.CommandEndStr
    - VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
    - VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
    - VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
    - VST.Device.LightingController.DefaultLightingController.CheckSum(System.String)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: VST.Device.LightingController.EthernetLightingController.#ctor(System.String,System.Int32)
      commentId: M:VST.Device.LightingController.EthernetLightingController.#ctor(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: EthernetLightingController(String, Int32)
        VB: EthernetLightingController(String, Int32)
      nameWithType:
        CSharp: EthernetLightingController.EthernetLightingController(String, Int32)
        VB: EthernetLightingController.EthernetLightingController(String, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.EthernetLightingController(System.String, System.Int32)
        VB: VST.Device.LightingController.EthernetLightingController.EthernetLightingController(System.String, System.Int32)
      type: Constructor
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: .ctor
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 10
      syntax:
        content:
          CSharp: public EthernetLightingController(string modelName, int channels = 0)
          VB: Public Sub New(modelName As String, channels As Integer = 0)
        parameters:
        - id: modelName
          type: System.String
        - id: channels
          type: System.Int32
      overload: VST.Device.LightingController.EthernetLightingController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.EthernetLightingController.CommandSent
      commentId: P:VST.Device.LightingController.EthernetLightingController.CommandSent
      language: CSharp
      name:
        CSharp: CommandSent
        VB: CommandSent
      nameWithType:
        CSharp: EthernetLightingController.CommandSent
        VB: EthernetLightingController.CommandSent
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.CommandSent
        VB: VST.Device.LightingController.EthernetLightingController.CommandSent
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommandSent
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 15
      syntax:
        content:
          CSharp: public override EventHandler<string> CommandSent { get; set; }
          VB: Public Overrides Property CommandSent As EventHandler(Of String)
        parameters: []
        return:
          type: System.EventHandler{System.String}
      overload: VST.Device.LightingController.EthernetLightingController.CommandSent*
      overridden: VST.Device.LightingController.DefaultLightingController.CommandSent
      modifiers:
        CSharp:
        - public
        - override
        - get
        - set
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.EthernetLightingController.HostName
      commentId: P:VST.Device.LightingController.EthernetLightingController.HostName
      language: CSharp
      name:
        CSharp: HostName
        VB: HostName
      nameWithType:
        CSharp: EthernetLightingController.HostName
        VB: EthernetLightingController.HostName
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.HostName
        VB: VST.Device.LightingController.EthernetLightingController.HostName
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: HostName
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 16
      syntax:
        content:
          CSharp: public override string HostName { get; protected set; }
          VB: Public Overrides Property HostName As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.EthernetLightingController.HostName*
      overridden: VST.Device.LightingController.DefaultLightingController.HostName
      modifiers:
        CSharp:
        - public
        - override
        - get
        - protected set
        VB:
        - Public
        - Overrides
        - Get
        - Protected Set
    - id: VST.Device.LightingController.EthernetLightingController.Delay
      commentId: P:VST.Device.LightingController.EthernetLightingController.Delay
      language: CSharp
      name:
        CSharp: Delay
        VB: Delay
      nameWithType:
        CSharp: EthernetLightingController.Delay
        VB: EthernetLightingController.Delay
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.Delay
        VB: VST.Device.LightingController.EthernetLightingController.Delay
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Delay
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 18
      syntax:
        content:
          CSharp: public override int Delay { get; protected set; }
          VB: Public Overrides Property Delay As Integer
        parameters: []
        return:
          type: System.Int32
      overload: VST.Device.LightingController.EthernetLightingController.Delay*
      overridden: VST.Device.LightingController.DefaultLightingController.Delay
      modifiers:
        CSharp:
        - public
        - override
        - get
        - protected set
        VB:
        - Public
        - Overrides
        - Get
        - Protected Set
    - id: VST.Device.LightingController.EthernetLightingController.IsConnected
      commentId: P:VST.Device.LightingController.EthernetLightingController.IsConnected
      language: CSharp
      name:
        CSharp: IsConnected
        VB: IsConnected
      nameWithType:
        CSharp: EthernetLightingController.IsConnected
        VB: EthernetLightingController.IsConnected
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.IsConnected
        VB: VST.Device.LightingController.EthernetLightingController.IsConnected
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: IsConnected
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 20
      syntax:
        content:
          CSharp: public override bool IsConnected { get; }
          VB: Public Overrides ReadOnly Property IsConnected As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: VST.Device.LightingController.EthernetLightingController.IsConnected*
      overridden: VST.Device.LightingController.DefaultLightingController.IsConnected
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: VST.Device.LightingController.EthernetLightingController.Client
      commentId: P:VST.Device.LightingController.EthernetLightingController.Client
      language: CSharp
      name:
        CSharp: Client
        VB: Client
      nameWithType:
        CSharp: EthernetLightingController.Client
        VB: EthernetLightingController.Client
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.Client
        VB: VST.Device.LightingController.EthernetLightingController.Client
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Client
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 21
      syntax:
        content:
          CSharp: public TcpClient Client { get; }
          VB: Public ReadOnly Property Client As TcpClient
        parameters: []
        return:
          type: System.Net.Sockets.TcpClient
      overload: VST.Device.LightingController.EthernetLightingController.Client*
      implements:
      - VST.Device.LightingController.IEthernet.Client
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.EthernetLightingController.CommunicationInterface
      commentId: P:VST.Device.LightingController.EthernetLightingController.CommunicationInterface
      language: CSharp
      name:
        CSharp: CommunicationInterface
        VB: CommunicationInterface
      nameWithType:
        CSharp: EthernetLightingController.CommunicationInterface
        VB: EthernetLightingController.CommunicationInterface
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.CommunicationInterface
        VB: VST.Device.LightingController.EthernetLightingController.CommunicationInterface
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommunicationInterface
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 22
      syntax:
        content:
          CSharp: public override CommunicationInterfaces CommunicationInterface { get; protected set; }
          VB: Public Overrides Property CommunicationInterface As CommunicationInterfaces
        parameters: []
        return:
          type: VST.Device.LightingController.CommunicationInterfaces
      overload: VST.Device.LightingController.EthernetLightingController.CommunicationInterface*
      overridden: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
      modifiers:
        CSharp:
        - public
        - override
        - get
        - protected set
        VB:
        - Public
        - Overrides
        - Get
        - Protected Set
    - id: VST.Device.LightingController.EthernetLightingController.Open(System.String)
      commentId: M:VST.Device.LightingController.EthernetLightingController.Open(System.String)
      language: CSharp
      name:
        CSharp: Open(String)
        VB: Open(String)
      nameWithType:
        CSharp: EthernetLightingController.Open(String)
        VB: EthernetLightingController.Open(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.Open(System.String)
        VB: VST.Device.LightingController.EthernetLightingController.Open(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Open
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 25
      syntax:
        content:
          CSharp: public override void Open(string ip = "192.168.11.20")
          VB: Public Overrides Sub Open(ip As String = "192.168.11.20")
        parameters:
        - id: ip
          type: System.String
      overload: VST.Device.LightingController.EthernetLightingController.Open*
      overridden: VST.Device.LightingController.DefaultLightingController.Open(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.EthernetLightingController.ChangeIP(System.String)
      commentId: M:VST.Device.LightingController.EthernetLightingController.ChangeIP(System.String)
      language: CSharp
      name:
        CSharp: ChangeIP(String)
        VB: ChangeIP(String)
      nameWithType:
        CSharp: EthernetLightingController.ChangeIP(String)
        VB: EthernetLightingController.ChangeIP(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.ChangeIP(System.String)
        VB: VST.Device.LightingController.EthernetLightingController.ChangeIP(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: ChangeIP
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 39
      syntax:
        content:
          CSharp: public bool ChangeIP(string ip)
          VB: Public Function ChangeIP(ip As String) As Boolean
        parameters:
        - id: ip
          type: System.String
        return:
          type: System.Boolean
      overload: VST.Device.LightingController.EthernetLightingController.ChangeIP*
      implements:
      - VST.Device.LightingController.IEthernet.ChangeIP(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.EthernetLightingController.Close
      commentId: M:VST.Device.LightingController.EthernetLightingController.Close
      language: CSharp
      name:
        CSharp: Close()
        VB: Close()
      nameWithType:
        CSharp: EthernetLightingController.Close()
        VB: EthernetLightingController.Close()
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.Close()
        VB: VST.Device.LightingController.EthernetLightingController.Close()
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Close
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 55
      syntax:
        content:
          CSharp: public override void Close()
          VB: Public Overrides Sub Close
      overload: VST.Device.LightingController.EthernetLightingController.Close*
      overridden: VST.Device.LightingController.DefaultLightingController.Close
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.EthernetLightingController.SendCommand(System.String)
      commentId: M:VST.Device.LightingController.EthernetLightingController.SendCommand(System.String)
      language: CSharp
      name:
        CSharp: SendCommand(String)
        VB: SendCommand(String)
      nameWithType:
        CSharp: EthernetLightingController.SendCommand(String)
        VB: EthernetLightingController.SendCommand(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.SendCommand(System.String)
        VB: VST.Device.LightingController.EthernetLightingController.SendCommand(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SendCommand
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 63
      syntax:
        content:
          CSharp: public override void SendCommand(string command)
          VB: Public Overrides Sub SendCommand(command As String)
        parameters:
        - id: command
          type: System.String
      overload: VST.Device.LightingController.EthernetLightingController.SendCommand*
      overridden: VST.Device.LightingController.DefaultLightingController.SendCommand(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.EthernetLightingController.SetIntensity(System.Int32,System.Int32)
      commentId: M:VST.Device.LightingController.EthernetLightingController.SetIntensity(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetIntensity(Int32, Int32)
        VB: SetIntensity(Int32, Int32)
      nameWithType:
        CSharp: EthernetLightingController.SetIntensity(Int32, Int32)
        VB: EthernetLightingController.SetIntensity(Int32, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.SetIntensity(System.Int32, System.Int32)
        VB: VST.Device.LightingController.EthernetLightingController.SetIntensity(System.Int32, System.Int32)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetIntensity
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 73
      syntax:
        content:
          CSharp: public override void SetIntensity(int channel, int intensity)
          VB: Public Overrides Sub SetIntensity(channel As Integer, intensity As Integer)
        parameters:
        - id: channel
          type: System.Int32
        - id: intensity
          type: System.Int32
      overload: VST.Device.LightingController.EthernetLightingController.SetIntensity*
      overridden: VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.EthernetLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      commentId: M:VST.Device.LightingController.EthernetLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      language: CSharp
      name:
        CSharp: SetStrobeMode(Int32, StrobeModes)
        VB: SetStrobeMode(Int32, StrobeModes)
      nameWithType:
        CSharp: EthernetLightingController.SetStrobeMode(Int32, StrobeModes)
        VB: EthernetLightingController.SetStrobeMode(Int32, StrobeModes)
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.SetStrobeMode(System.Int32, VST.Device.LightingController.StrobeModes)
        VB: VST.Device.LightingController.EthernetLightingController.SetStrobeMode(System.Int32, VST.Device.LightingController.StrobeModes)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetStrobeMode
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 80
      syntax:
        content:
          CSharp: public override void SetStrobeMode(int channel, StrobeModes mode)
          VB: Public Overrides Sub SetStrobeMode(channel As Integer, mode As StrobeModes)
        parameters:
        - id: channel
          type: System.Int32
        - id: mode
          type: VST.Device.LightingController.StrobeModes
      overload: VST.Device.LightingController.EthernetLightingController.SetStrobeMode*
      overridden: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.EthernetLightingController.SetOnOff(System.Int32,System.Boolean)
      commentId: M:VST.Device.LightingController.EthernetLightingController.SetOnOff(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SetOnOff(Int32, Boolean)
        VB: SetOnOff(Int32, Boolean)
      nameWithType:
        CSharp: EthernetLightingController.SetOnOff(Int32, Boolean)
        VB: EthernetLightingController.SetOnOff(Int32, Boolean)
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.SetOnOff(System.Int32, System.Boolean)
        VB: VST.Device.LightingController.EthernetLightingController.SetOnOff(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetOnOff
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 88
      syntax:
        content:
          CSharp: public override void SetOnOff(int channel, bool mode)
          VB: Public Overrides Sub SetOnOff(channel As Integer, mode As Boolean)
        parameters:
        - id: channel
          type: System.Int32
        - id: mode
          type: System.Boolean
      overload: VST.Device.LightingController.EthernetLightingController.SetOnOff*
      overridden: VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32,System.Boolean)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.EthernetLightingController.Initialize
      commentId: M:VST.Device.LightingController.EthernetLightingController.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: EthernetLightingController.Initialize()
        VB: EthernetLightingController.Initialize()
      qualifiedName:
        CSharp: VST.Device.LightingController.EthernetLightingController.Initialize()
        VB: VST.Device.LightingController.EthernetLightingController.Initialize()
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/EthernetLightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Initialize
        path: ../src/VST.Device.LightingController/EthernetLightingController.cs
        startLine: 96
      syntax:
        content:
          CSharp: public override void Initialize()
          VB: Public Overrides Sub Initialize
      overload: VST.Device.LightingController.EthernetLightingController.Initialize*
      overridden: VST.Device.LightingController.DefaultLightingController.Initialize
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: VST.Device.LightingController.IChannelController
    commentId: T:VST.Device.LightingController.IChannelController
    language: CSharp
    name:
      CSharp: IChannelController
      VB: IChannelController
    nameWithType:
      CSharp: IChannelController
      VB: IChannelController
    qualifiedName:
      CSharp: VST.Device.LightingController.IChannelController
      VB: VST.Device.LightingController.IChannelController
    type: Interface
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/Interface/IChannelController.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: IChannelController
      path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
      startLine: 5
    summary: "\n通道控制介面\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IChannelController : IInitialize'
        VB: >-
          Public Interface IChannelController

              Inherits IInitialize
    inheritedMembers:
    - VST.Device.LightingController.IInitialize.Initialize
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: VST.Device.LightingController.IChannelController.Index
      commentId: P:VST.Device.LightingController.IChannelController.Index
      language: CSharp
      name:
        CSharp: Index
        VB: Index
      nameWithType:
        CSharp: IChannelController.Index
        VB: IChannelController.Index
      qualifiedName:
        CSharp: VST.Device.LightingController.IChannelController.Index
        VB: VST.Device.LightingController.IChannelController.Index
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Index
        path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
        startLine: 10
      summary: "\n通道索引\n"
      example: []
      syntax:
        content:
          CSharp: int Index { get; }
          VB: ReadOnly Property Index As Integer
        parameters: []
        return:
          type: System.Int32
      overload: VST.Device.LightingController.IChannelController.Index*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.IChannelController.IsOn
      commentId: P:VST.Device.LightingController.IChannelController.IsOn
      language: CSharp
      name:
        CSharp: IsOn
        VB: IsOn
      nameWithType:
        CSharp: IChannelController.IsOn
        VB: IChannelController.IsOn
      qualifiedName:
        CSharp: VST.Device.LightingController.IChannelController.IsOn
        VB: VST.Device.LightingController.IChannelController.IsOn
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: IsOn
        path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
        startLine: 14
      summary: "\n通道開關狀態，由於控制器不會主動同步狀態，因此初始值為null，在設定過一次之後才會有值。\n"
      example: []
      syntax:
        content:
          CSharp: bool? IsOn { get; }
          VB: ReadOnly Property IsOn As Boolean?
        parameters: []
        return:
          type: System.Nullable{System.Boolean}
      overload: VST.Device.LightingController.IChannelController.IsOn*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.IChannelController.Mode
      commentId: P:VST.Device.LightingController.IChannelController.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: IChannelController.Mode
        VB: IChannelController.Mode
      qualifiedName:
        CSharp: VST.Device.LightingController.IChannelController.Mode
        VB: VST.Device.LightingController.IChannelController.Mode
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Mode
        path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
        startLine: 18
      summary: "\n閃爍模式，由於控制器不會主動同步狀態，因此初始值為null，在設定過一次之後才會有值。\n"
      example: []
      syntax:
        content:
          CSharp: StrobeModes? Mode { get; }
          VB: ReadOnly Property Mode As StrobeModes?
        parameters: []
        return:
          type: System.Nullable{VST.Device.LightingController.StrobeModes}
      overload: VST.Device.LightingController.IChannelController.Mode*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.IChannelController.Intensity
      commentId: P:VST.Device.LightingController.IChannelController.Intensity
      language: CSharp
      name:
        CSharp: Intensity
        VB: Intensity
      nameWithType:
        CSharp: IChannelController.Intensity
        VB: IChannelController.Intensity
      qualifiedName:
        CSharp: VST.Device.LightingController.IChannelController.Intensity
        VB: VST.Device.LightingController.IChannelController.Intensity
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Intensity
        path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
        startLine: 22
      summary: "\n通道亮度，由於控制器不會主動同步狀態，因此初始值為null，在設定過一次之後才會有值。\n"
      example: []
      syntax:
        content:
          CSharp: int? Intensity { get; }
          VB: ReadOnly Property Intensity As Integer?
        parameters: []
        return:
          type: System.Nullable{System.Int32}
      overload: VST.Device.LightingController.IChannelController.Intensity*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.IChannelController.Owner
      commentId: P:VST.Device.LightingController.IChannelController.Owner
      language: CSharp
      name:
        CSharp: Owner
        VB: Owner
      nameWithType:
        CSharp: IChannelController.Owner
        VB: IChannelController.Owner
      qualifiedName:
        CSharp: VST.Device.LightingController.IChannelController.Owner
        VB: VST.Device.LightingController.IChannelController.Owner
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Owner
        path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
        startLine: 27
      summary: "\n所屬控制器\n"
      example: []
      syntax:
        content:
          CSharp: ILightingController Owner { get; }
          VB: ReadOnly Property Owner As ILightingController
        parameters: []
        return:
          type: VST.Device.LightingController.ILightingController
          description: ''
      overload: VST.Device.LightingController.IChannelController.Owner*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.IChannelController.SendCommand(System.String)
      commentId: M:VST.Device.LightingController.IChannelController.SendCommand(System.String)
      language: CSharp
      name:
        CSharp: SendCommand(String)
        VB: SendCommand(String)
      nameWithType:
        CSharp: IChannelController.SendCommand(String)
        VB: IChannelController.SendCommand(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.IChannelController.SendCommand(System.String)
        VB: VST.Device.LightingController.IChannelController.SendCommand(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SendCommand
        path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
        startLine: 32
      summary: "\n送出指令\n"
      example: []
      syntax:
        content:
          CSharp: void SendCommand(string command)
          VB: Sub SendCommand(command As String)
        parameters:
        - id: command
          type: System.String
          description: 指令
      overload: VST.Device.LightingController.IChannelController.SendCommand*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.IChannelController.SetIntensity(System.Int32)
      commentId: M:VST.Device.LightingController.IChannelController.SetIntensity(System.Int32)
      language: CSharp
      name:
        CSharp: SetIntensity(Int32)
        VB: SetIntensity(Int32)
      nameWithType:
        CSharp: IChannelController.SetIntensity(Int32)
        VB: IChannelController.SetIntensity(Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.IChannelController.SetIntensity(System.Int32)
        VB: VST.Device.LightingController.IChannelController.SetIntensity(System.Int32)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetIntensity
        path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
        startLine: 37
      summary: "\n設定亮度\n"
      example: []
      syntax:
        content:
          CSharp: void SetIntensity(int intensity)
          VB: Sub SetIntensity(intensity As Integer)
        parameters:
        - id: intensity
          type: System.Int32
          description: 亮度，可設定值為0~255
      overload: VST.Device.LightingController.IChannelController.SetIntensity*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.IChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
      commentId: M:VST.Device.LightingController.IChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
      language: CSharp
      name:
        CSharp: SetStrobeMode(StrobeModes)
        VB: SetStrobeMode(StrobeModes)
      nameWithType:
        CSharp: IChannelController.SetStrobeMode(StrobeModes)
        VB: IChannelController.SetStrobeMode(StrobeModes)
      qualifiedName:
        CSharp: VST.Device.LightingController.IChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
        VB: VST.Device.LightingController.IChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetStrobeMode
        path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
        startLine: 42
      summary: "\n設定閃爍模式\n"
      example: []
      syntax:
        content:
          CSharp: void SetStrobeMode(StrobeModes mode)
          VB: Sub SetStrobeMode(mode As StrobeModes)
        parameters:
        - id: mode
          type: VST.Device.LightingController.StrobeModes
          description: 閃爍模式，請參考StrobeModes
      overload: VST.Device.LightingController.IChannelController.SetStrobeMode*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.IChannelController.SetOnOff(System.Boolean)
      commentId: M:VST.Device.LightingController.IChannelController.SetOnOff(System.Boolean)
      language: CSharp
      name:
        CSharp: SetOnOff(Boolean)
        VB: SetOnOff(Boolean)
      nameWithType:
        CSharp: IChannelController.SetOnOff(Boolean)
        VB: IChannelController.SetOnOff(Boolean)
      qualifiedName:
        CSharp: VST.Device.LightingController.IChannelController.SetOnOff(System.Boolean)
        VB: VST.Device.LightingController.IChannelController.SetOnOff(System.Boolean)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IChannelController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetOnOff
        path: ../src/VST.Device.LightingController/Interface/IChannelController.cs
        startLine: 47
      summary: "\n設定開關\n"
      example: []
      syntax:
        content:
          CSharp: void SetOnOff(bool mode)
          VB: Sub SetOnOff(mode As Boolean)
        parameters:
        - id: mode
          type: System.Boolean
          description: 開關
      overload: VST.Device.LightingController.IChannelController.SetOnOff*
      modifiers:
        CSharp: []
        VB: []
  - id: VST.Device.LightingController.ICommunicationInterfaces
    commentId: T:VST.Device.LightingController.ICommunicationInterfaces
    language: CSharp
    name:
      CSharp: ICommunicationInterfaces
      VB: ICommunicationInterfaces
    nameWithType:
      CSharp: ICommunicationInterfaces
      VB: ICommunicationInterfaces
    qualifiedName:
      CSharp: VST.Device.LightingController.ICommunicationInterfaces
      VB: VST.Device.LightingController.ICommunicationInterfaces
    type: Interface
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: ICommunicationInterfaces
      path: ../src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
      startLine: 5
    syntax:
      content:
        CSharp: public interface ICommunicationInterfaces
        VB: Public Interface ICommunicationInterfaces
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items: []
  - id: VST.Device.LightingController.IRS232
    commentId: T:VST.Device.LightingController.IRS232
    language: CSharp
    name:
      CSharp: IRS232
      VB: IRS232
    nameWithType:
      CSharp: IRS232
      VB: IRS232
    qualifiedName:
      CSharp: VST.Device.LightingController.IRS232
      VB: VST.Device.LightingController.IRS232
    type: Interface
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: IRS232
      path: ../src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
      startLine: 10
    syntax:
      content:
        CSharp: 'public interface IRS232 : ICommunicationInterfaces'
        VB: >-
          Public Interface IRS232

              Inherits ICommunicationInterfaces
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: VST.Device.LightingController.IRS232.Port
      commentId: P:VST.Device.LightingController.IRS232.Port
      language: CSharp
      name:
        CSharp: Port
        VB: Port
      nameWithType:
        CSharp: IRS232.Port
        VB: IRS232.Port
      qualifiedName:
        CSharp: VST.Device.LightingController.IRS232.Port
        VB: VST.Device.LightingController.IRS232.Port
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Port
        path: ../src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
        startLine: 12
      syntax:
        content:
          CSharp: SerialPort Port { get; }
          VB: ReadOnly Property Port As SerialPort
        parameters: []
        return:
          type: System.IO.Ports.SerialPort
      overload: VST.Device.LightingController.IRS232.Port*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: VST.Device.LightingController.IEthernet
    commentId: T:VST.Device.LightingController.IEthernet
    language: CSharp
    name:
      CSharp: IEthernet
      VB: IEthernet
    nameWithType:
      CSharp: IEthernet
      VB: IEthernet
    qualifiedName:
      CSharp: VST.Device.LightingController.IEthernet
      VB: VST.Device.LightingController.IEthernet
    type: Interface
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: IEthernet
      path: ../src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
      startLine: 15
    syntax:
      content:
        CSharp: 'public interface IEthernet : ICommunicationInterfaces'
        VB: >-
          Public Interface IEthernet

              Inherits ICommunicationInterfaces
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: VST.Device.LightingController.IEthernet.Client
      commentId: P:VST.Device.LightingController.IEthernet.Client
      language: CSharp
      name:
        CSharp: Client
        VB: Client
      nameWithType:
        CSharp: IEthernet.Client
        VB: IEthernet.Client
      qualifiedName:
        CSharp: VST.Device.LightingController.IEthernet.Client
        VB: VST.Device.LightingController.IEthernet.Client
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Client
        path: ../src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
        startLine: 17
      syntax:
        content:
          CSharp: TcpClient Client { get; }
          VB: ReadOnly Property Client As TcpClient
        parameters: []
        return:
          type: System.Net.Sockets.TcpClient
      overload: VST.Device.LightingController.IEthernet.Client*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.IEthernet.ChangeIP(System.String)
      commentId: M:VST.Device.LightingController.IEthernet.ChangeIP(System.String)
      language: CSharp
      name:
        CSharp: ChangeIP(String)
        VB: ChangeIP(String)
      nameWithType:
        CSharp: IEthernet.ChangeIP(String)
        VB: IEthernet.ChangeIP(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.IEthernet.ChangeIP(System.String)
        VB: VST.Device.LightingController.IEthernet.ChangeIP(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: ChangeIP
        path: ../src/VST.Device.LightingController/Interface/ICommunitcationInterface.cs
        startLine: 19
      syntax:
        content:
          CSharp: bool ChangeIP(string ip)
          VB: Function ChangeIP(ip As String) As Boolean
        parameters:
        - id: ip
          type: System.String
        return:
          type: System.Boolean
      overload: VST.Device.LightingController.IEthernet.ChangeIP*
      modifiers:
        CSharp: []
        VB: []
  - id: VST.Device.LightingController.IInitialize
    commentId: T:VST.Device.LightingController.IInitialize
    language: CSharp
    name:
      CSharp: IInitialize
      VB: IInitialize
    nameWithType:
      CSharp: IInitialize
      VB: IInitialize
    qualifiedName:
      CSharp: VST.Device.LightingController.IInitialize
      VB: VST.Device.LightingController.IInitialize
    type: Interface
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/Interface/IInitialize.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: IInitialize
      path: ../src/VST.Device.LightingController/Interface/IInitialize.cs
      startLine: 2
    syntax:
      content:
        CSharp: public interface IInitialize
        VB: Public Interface IInitialize
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: VST.Device.LightingController.IInitialize.Initialize
      commentId: M:VST.Device.LightingController.IInitialize.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: IInitialize.Initialize()
        VB: IInitialize.Initialize()
      qualifiedName:
        CSharp: VST.Device.LightingController.IInitialize.Initialize()
        VB: VST.Device.LightingController.IInitialize.Initialize()
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/IInitialize.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Initialize
        path: ../src/VST.Device.LightingController/Interface/IInitialize.cs
        startLine: 4
      syntax:
        content:
          CSharp: void Initialize()
          VB: Sub Initialize
      overload: VST.Device.LightingController.IInitialize.Initialize*
      modifiers:
        CSharp: []
        VB: []
  - id: VST.Device.LightingController.StrobeModes
    commentId: T:VST.Device.LightingController.StrobeModes
    language: CSharp
    name:
      CSharp: StrobeModes
      VB: StrobeModes
    nameWithType:
      CSharp: StrobeModes
      VB: StrobeModes
    qualifiedName:
      CSharp: VST.Device.LightingController.StrobeModes
      VB: VST.Device.LightingController.StrobeModes
    type: Enum
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/Interface/ILightingController.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: StrobeModes
      path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
      startLine: 7
    summary: "\nHello\n"
    example: []
    syntax:
      content:
        CSharp: public enum StrobeModes
        VB: Public Enum StrobeModes
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: VST.Device.LightingController.StrobeModes.None
      commentId: F:VST.Device.LightingController.StrobeModes.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: StrobeModes.None
        VB: StrobeModes.None
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.None
        VB: VST.Device.LightingController.StrobeModes.None
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: None
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 12
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F1
      commentId: F:VST.Device.LightingController.StrobeModes.F1
      language: CSharp
      name:
        CSharp: F1
        VB: F1
      nameWithType:
        CSharp: StrobeModes.F1
        VB: StrobeModes.F1
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F1
        VB: VST.Device.LightingController.StrobeModes.F1
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F1
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 16
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F1 = 1
          VB: F1 = 1
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F2
      commentId: F:VST.Device.LightingController.StrobeModes.F2
      language: CSharp
      name:
        CSharp: F2
        VB: F2
      nameWithType:
        CSharp: StrobeModes.F2
        VB: StrobeModes.F2
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F2
        VB: VST.Device.LightingController.StrobeModes.F2
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F2
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 20
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F2 = 2
          VB: F2 = 2
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F3
      commentId: F:VST.Device.LightingController.StrobeModes.F3
      language: CSharp
      name:
        CSharp: F3
        VB: F3
      nameWithType:
        CSharp: StrobeModes.F3
        VB: StrobeModes.F3
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F3
        VB: VST.Device.LightingController.StrobeModes.F3
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F3
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 24
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F3 = 3
          VB: F3 = 3
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F4
      commentId: F:VST.Device.LightingController.StrobeModes.F4
      language: CSharp
      name:
        CSharp: F4
        VB: F4
      nameWithType:
        CSharp: StrobeModes.F4
        VB: StrobeModes.F4
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F4
        VB: VST.Device.LightingController.StrobeModes.F4
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F4
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 28
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F4 = 4
          VB: F4 = 4
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F5
      commentId: F:VST.Device.LightingController.StrobeModes.F5
      language: CSharp
      name:
        CSharp: F5
        VB: F5
      nameWithType:
        CSharp: StrobeModes.F5
        VB: StrobeModes.F5
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F5
        VB: VST.Device.LightingController.StrobeModes.F5
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F5
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 32
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F5 = 5
          VB: F5 = 5
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F6
      commentId: F:VST.Device.LightingController.StrobeModes.F6
      language: CSharp
      name:
        CSharp: F6
        VB: F6
      nameWithType:
        CSharp: StrobeModes.F6
        VB: StrobeModes.F6
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F6
        VB: VST.Device.LightingController.StrobeModes.F6
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F6
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 36
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F6 = 6
          VB: F6 = 6
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F7
      commentId: F:VST.Device.LightingController.StrobeModes.F7
      language: CSharp
      name:
        CSharp: F7
        VB: F7
      nameWithType:
        CSharp: StrobeModes.F7
        VB: StrobeModes.F7
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F7
        VB: VST.Device.LightingController.StrobeModes.F7
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F7
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 40
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F7 = 7
          VB: F7 = 7
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F8
      commentId: F:VST.Device.LightingController.StrobeModes.F8
      language: CSharp
      name:
        CSharp: F8
        VB: F8
      nameWithType:
        CSharp: StrobeModes.F8
        VB: StrobeModes.F8
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F8
        VB: VST.Device.LightingController.StrobeModes.F8
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F8
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 44
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F8 = 8
          VB: F8 = 8
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F9
      commentId: F:VST.Device.LightingController.StrobeModes.F9
      language: CSharp
      name:
        CSharp: F9
        VB: F9
      nameWithType:
        CSharp: StrobeModes.F9
        VB: StrobeModes.F9
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F9
        VB: VST.Device.LightingController.StrobeModes.F9
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F9
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 48
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F9 = 9
          VB: F9 = 9
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.StrobeModes.F10
      commentId: F:VST.Device.LightingController.StrobeModes.F10
      language: CSharp
      name:
        CSharp: F10
        VB: F10
      nameWithType:
        CSharp: StrobeModes.F10
        VB: StrobeModes.F10
      qualifiedName:
        CSharp: VST.Device.LightingController.StrobeModes.F10
        VB: VST.Device.LightingController.StrobeModes.F10
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: F10
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 52
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: F10 = 10
          VB: F10 = 10
        return:
          type: VST.Device.LightingController.StrobeModes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: VST.Device.LightingController.CommunicationInterfaces
    commentId: T:VST.Device.LightingController.CommunicationInterfaces
    language: CSharp
    name:
      CSharp: CommunicationInterfaces
      VB: CommunicationInterfaces
    nameWithType:
      CSharp: CommunicationInterfaces
      VB: CommunicationInterfaces
    qualifiedName:
      CSharp: VST.Device.LightingController.CommunicationInterfaces
      VB: VST.Device.LightingController.CommunicationInterfaces
    type: Enum
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/Interface/ILightingController.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: CommunicationInterfaces
      path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
      startLine: 55
    syntax:
      content:
        CSharp: public enum CommunicationInterfaces
        VB: Public Enum CommunicationInterfaces
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: VST.Device.LightingController.CommunicationInterfaces.None
      commentId: F:VST.Device.LightingController.CommunicationInterfaces.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: CommunicationInterfaces.None
        VB: CommunicationInterfaces.None
      qualifiedName:
        CSharp: VST.Device.LightingController.CommunicationInterfaces.None
        VB: VST.Device.LightingController.CommunicationInterfaces.None
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: None
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 57
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: VST.Device.LightingController.CommunicationInterfaces
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.CommunicationInterfaces.Ethernet
      commentId: F:VST.Device.LightingController.CommunicationInterfaces.Ethernet
      language: CSharp
      name:
        CSharp: Ethernet
        VB: Ethernet
      nameWithType:
        CSharp: CommunicationInterfaces.Ethernet
        VB: CommunicationInterfaces.Ethernet
      qualifiedName:
        CSharp: VST.Device.LightingController.CommunicationInterfaces.Ethernet
        VB: VST.Device.LightingController.CommunicationInterfaces.Ethernet
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Ethernet
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 58
      syntax:
        content:
          CSharp: Ethernet = 1
          VB: Ethernet = 1
        return:
          type: VST.Device.LightingController.CommunicationInterfaces
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: VST.Device.LightingController.CommunicationInterfaces.RS232
      commentId: F:VST.Device.LightingController.CommunicationInterfaces.RS232
      language: CSharp
      name:
        CSharp: RS232
        VB: RS232
      nameWithType:
        CSharp: CommunicationInterfaces.RS232
        VB: CommunicationInterfaces.RS232
      qualifiedName:
        CSharp: VST.Device.LightingController.CommunicationInterfaces.RS232
        VB: VST.Device.LightingController.CommunicationInterfaces.RS232
      type: Field
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: RS232
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 59
      syntax:
        content:
          CSharp: RS232 = 2
          VB: RS232 = 2
        return:
          type: VST.Device.LightingController.CommunicationInterfaces
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: VST.Device.LightingController.ILightingController
    commentId: T:VST.Device.LightingController.ILightingController
    language: CSharp
    name:
      CSharp: ILightingController
      VB: ILightingController
    nameWithType:
      CSharp: ILightingController
      VB: ILightingController
    qualifiedName:
      CSharp: VST.Device.LightingController.ILightingController
      VB: VST.Device.LightingController.ILightingController
    type: Interface
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/Interface/ILightingController.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: ILightingController
      path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
      startLine: 65
    summary: "\n提供一般控制器功能的Interface\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface ILightingController : IInitialize'
        VB: >-
          Public Interface ILightingController

              Inherits IInitialize
    inheritedMembers:
    - VST.Device.LightingController.IInitialize.Initialize
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: VST.Device.LightingController.ILightingController.CommandSent
      commentId: P:VST.Device.LightingController.ILightingController.CommandSent
      language: CSharp
      name:
        CSharp: CommandSent
        VB: CommandSent
      nameWithType:
        CSharp: ILightingController.CommandSent
        VB: ILightingController.CommandSent
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.CommandSent
        VB: VST.Device.LightingController.ILightingController.CommandSent
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommandSent
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 67
      syntax:
        content:
          CSharp: EventHandler<string> CommandSent { get; set; }
          VB: Property CommandSent As EventHandler(Of String)
        parameters: []
        return:
          type: System.EventHandler{System.String}
      overload: VST.Device.LightingController.ILightingController.CommandSent*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: VST.Device.LightingController.ILightingController.HostName
      commentId: P:VST.Device.LightingController.ILightingController.HostName
      language: CSharp
      name:
        CSharp: HostName
        VB: HostName
      nameWithType:
        CSharp: ILightingController.HostName
        VB: ILightingController.HostName
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.HostName
        VB: VST.Device.LightingController.ILightingController.HostName
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: HostName
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 68
      syntax:
        content:
          CSharp: string HostName { get; }
          VB: ReadOnly Property HostName As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.ILightingController.HostName*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.Delay
      commentId: P:VST.Device.LightingController.ILightingController.Delay
      language: CSharp
      name:
        CSharp: Delay
        VB: Delay
      nameWithType:
        CSharp: ILightingController.Delay
        VB: ILightingController.Delay
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.Delay
        VB: VST.Device.LightingController.ILightingController.Delay
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Delay
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 69
      syntax:
        content:
          CSharp: int Delay { get; }
          VB: ReadOnly Property Delay As Integer
        parameters: []
        return:
          type: System.Int32
      overload: VST.Device.LightingController.ILightingController.Delay*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.IsConnected
      commentId: P:VST.Device.LightingController.ILightingController.IsConnected
      language: CSharp
      name:
        CSharp: IsConnected
        VB: IsConnected
      nameWithType:
        CSharp: ILightingController.IsConnected
        VB: ILightingController.IsConnected
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.IsConnected
        VB: VST.Device.LightingController.ILightingController.IsConnected
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: IsConnected
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 70
      syntax:
        content:
          CSharp: bool IsConnected { get; }
          VB: ReadOnly Property IsConnected As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: VST.Device.LightingController.ILightingController.IsConnected*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.ModelName
      commentId: P:VST.Device.LightingController.ILightingController.ModelName
      language: CSharp
      name:
        CSharp: ModelName
        VB: ModelName
      nameWithType:
        CSharp: ILightingController.ModelName
        VB: ILightingController.ModelName
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.ModelName
        VB: VST.Device.LightingController.ILightingController.ModelName
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: ModelName
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 71
      syntax:
        content:
          CSharp: string ModelName { get; }
          VB: ReadOnly Property ModelName As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.ILightingController.ModelName*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.StrobeMode
      commentId: P:VST.Device.LightingController.ILightingController.StrobeMode
      language: CSharp
      name:
        CSharp: StrobeMode
        VB: StrobeMode
      nameWithType:
        CSharp: ILightingController.StrobeMode
        VB: ILightingController.StrobeMode
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.StrobeMode
        VB: VST.Device.LightingController.ILightingController.StrobeMode
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: StrobeMode
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 72
      syntax:
        content:
          CSharp: StrobeModes StrobeMode { get; }
          VB: ReadOnly Property StrobeMode As StrobeModes
        parameters: []
        return:
          type: VST.Device.LightingController.StrobeModes
      overload: VST.Device.LightingController.ILightingController.StrobeMode*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.CommunicationInterface
      commentId: P:VST.Device.LightingController.ILightingController.CommunicationInterface
      language: CSharp
      name:
        CSharp: CommunicationInterface
        VB: CommunicationInterface
      nameWithType:
        CSharp: ILightingController.CommunicationInterface
        VB: ILightingController.CommunicationInterface
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.CommunicationInterface
        VB: VST.Device.LightingController.ILightingController.CommunicationInterface
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommunicationInterface
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 73
      syntax:
        content:
          CSharp: CommunicationInterfaces CommunicationInterface { get; }
          VB: ReadOnly Property CommunicationInterface As CommunicationInterfaces
        parameters: []
        return:
          type: VST.Device.LightingController.CommunicationInterfaces
      overload: VST.Device.LightingController.ILightingController.CommunicationInterface*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.Item(System.Int32)
      commentId: P:VST.Device.LightingController.ILightingController.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: ILightingController.Item[Int32]
        VB: ILightingController.Item(Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.Item[System.Int32]
        VB: VST.Device.LightingController.ILightingController.Item(System.Int32)
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: this[]
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 74
      syntax:
        content:
          CSharp: IChannelController this[int index] { get; }
          VB: ReadOnly Property Item(index As Integer) As IChannelController
        parameters:
        - id: index
          type: System.Int32
        return:
          type: VST.Device.LightingController.IChannelController
      overload: VST.Device.LightingController.ILightingController.Item*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.ChannelCount
      commentId: P:VST.Device.LightingController.ILightingController.ChannelCount
      language: CSharp
      name:
        CSharp: ChannelCount
        VB: ChannelCount
      nameWithType:
        CSharp: ILightingController.ChannelCount
        VB: ILightingController.ChannelCount
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.ChannelCount
        VB: VST.Device.LightingController.ILightingController.ChannelCount
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: ChannelCount
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 75
      syntax:
        content:
          CSharp: int ChannelCount { get; }
          VB: ReadOnly Property ChannelCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: VST.Device.LightingController.ILightingController.ChannelCount*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.CommandHeaderStr
      commentId: P:VST.Device.LightingController.ILightingController.CommandHeaderStr
      language: CSharp
      name:
        CSharp: CommandHeaderStr
        VB: CommandHeaderStr
      nameWithType:
        CSharp: ILightingController.CommandHeaderStr
        VB: ILightingController.CommandHeaderStr
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.CommandHeaderStr
        VB: VST.Device.LightingController.ILightingController.CommandHeaderStr
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommandHeaderStr
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 76
      syntax:
        content:
          CSharp: string CommandHeaderStr { get; }
          VB: ReadOnly Property CommandHeaderStr As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.ILightingController.CommandHeaderStr*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.CommandEndStr
      commentId: P:VST.Device.LightingController.ILightingController.CommandEndStr
      language: CSharp
      name:
        CSharp: CommandEndStr
        VB: CommandEndStr
      nameWithType:
        CSharp: ILightingController.CommandEndStr
        VB: ILightingController.CommandEndStr
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.CommandEndStr
        VB: VST.Device.LightingController.ILightingController.CommandEndStr
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommandEndStr
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 77
      syntax:
        content:
          CSharp: string CommandEndStr { get; }
          VB: ReadOnly Property CommandEndStr As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.ILightingController.CommandEndStr*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: VST.Device.LightingController.ILightingController.SendCommand(System.String)
      commentId: M:VST.Device.LightingController.ILightingController.SendCommand(System.String)
      language: CSharp
      name:
        CSharp: SendCommand(String)
        VB: SendCommand(String)
      nameWithType:
        CSharp: ILightingController.SendCommand(String)
        VB: ILightingController.SendCommand(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.SendCommand(System.String)
        VB: VST.Device.LightingController.ILightingController.SendCommand(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SendCommand
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 78
      syntax:
        content:
          CSharp: void SendCommand(string command)
          VB: Sub SendCommand(command As String)
        parameters:
        - id: command
          type: System.String
      overload: VST.Device.LightingController.ILightingController.SendCommand*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.ILightingController.Open(System.String)
      commentId: M:VST.Device.LightingController.ILightingController.Open(System.String)
      language: CSharp
      name:
        CSharp: Open(String)
        VB: Open(String)
      nameWithType:
        CSharp: ILightingController.Open(String)
        VB: ILightingController.Open(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.Open(System.String)
        VB: VST.Device.LightingController.ILightingController.Open(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Open
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 79
      syntax:
        content:
          CSharp: void Open(string host)
          VB: Sub Open(host As String)
        parameters:
        - id: host
          type: System.String
      overload: VST.Device.LightingController.ILightingController.Open*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.ILightingController.Close
      commentId: M:VST.Device.LightingController.ILightingController.Close
      language: CSharp
      name:
        CSharp: Close()
        VB: Close()
      nameWithType:
        CSharp: ILightingController.Close()
        VB: ILightingController.Close()
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.Close()
        VB: VST.Device.LightingController.ILightingController.Close()
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Close
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 80
      syntax:
        content:
          CSharp: void Close()
          VB: Sub Close
      overload: VST.Device.LightingController.ILightingController.Close*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.ILightingController.SetIntensity(System.Int32,System.Int32)
      commentId: M:VST.Device.LightingController.ILightingController.SetIntensity(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetIntensity(Int32, Int32)
        VB: SetIntensity(Int32, Int32)
      nameWithType:
        CSharp: ILightingController.SetIntensity(Int32, Int32)
        VB: ILightingController.SetIntensity(Int32, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.SetIntensity(System.Int32, System.Int32)
        VB: VST.Device.LightingController.ILightingController.SetIntensity(System.Int32, System.Int32)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetIntensity
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 81
      syntax:
        content:
          CSharp: void SetIntensity(int channel, int intensity)
          VB: Sub SetIntensity(channel As Integer, intensity As Integer)
        parameters:
        - id: channel
          type: System.Int32
        - id: intensity
          type: System.Int32
      overload: VST.Device.LightingController.ILightingController.SetIntensity*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.ILightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
      commentId: M:VST.Device.LightingController.ILightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
      language: CSharp
      name:
        CSharp: SetIntensity(IChannelController, Int32)
        VB: SetIntensity(IChannelController, Int32)
      nameWithType:
        CSharp: ILightingController.SetIntensity(IChannelController, Int32)
        VB: ILightingController.SetIntensity(IChannelController, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.SetIntensity(VST.Device.LightingController.IChannelController, System.Int32)
        VB: VST.Device.LightingController.ILightingController.SetIntensity(VST.Device.LightingController.IChannelController, System.Int32)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetIntensity
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 82
      syntax:
        content:
          CSharp: void SetIntensity(IChannelController channel, int intensity)
          VB: Sub SetIntensity(channel As IChannelController, intensity As Integer)
        parameters:
        - id: channel
          type: VST.Device.LightingController.IChannelController
        - id: intensity
          type: System.Int32
      overload: VST.Device.LightingController.ILightingController.SetIntensity*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.ILightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      commentId: M:VST.Device.LightingController.ILightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      language: CSharp
      name:
        CSharp: SetStrobeMode(Int32, StrobeModes)
        VB: SetStrobeMode(Int32, StrobeModes)
      nameWithType:
        CSharp: ILightingController.SetStrobeMode(Int32, StrobeModes)
        VB: ILightingController.SetStrobeMode(Int32, StrobeModes)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.SetStrobeMode(System.Int32, VST.Device.LightingController.StrobeModes)
        VB: VST.Device.LightingController.ILightingController.SetStrobeMode(System.Int32, VST.Device.LightingController.StrobeModes)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetStrobeMode
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 83
      syntax:
        content:
          CSharp: void SetStrobeMode(int channel, StrobeModes mode)
          VB: Sub SetStrobeMode(channel As Integer, mode As StrobeModes)
        parameters:
        - id: channel
          type: System.Int32
        - id: mode
          type: VST.Device.LightingController.StrobeModes
      overload: VST.Device.LightingController.ILightingController.SetStrobeMode*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.ILightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
      commentId: M:VST.Device.LightingController.ILightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
      language: CSharp
      name:
        CSharp: SetStrobeMode(IChannelController, StrobeModes)
        VB: SetStrobeMode(IChannelController, StrobeModes)
      nameWithType:
        CSharp: ILightingController.SetStrobeMode(IChannelController, StrobeModes)
        VB: ILightingController.SetStrobeMode(IChannelController, StrobeModes)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.SetStrobeMode(VST.Device.LightingController.IChannelController, VST.Device.LightingController.StrobeModes)
        VB: VST.Device.LightingController.ILightingController.SetStrobeMode(VST.Device.LightingController.IChannelController, VST.Device.LightingController.StrobeModes)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetStrobeMode
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 84
      syntax:
        content:
          CSharp: void SetStrobeMode(IChannelController channel, StrobeModes mode)
          VB: Sub SetStrobeMode(channel As IChannelController, mode As StrobeModes)
        parameters:
        - id: channel
          type: VST.Device.LightingController.IChannelController
        - id: mode
          type: VST.Device.LightingController.StrobeModes
      overload: VST.Device.LightingController.ILightingController.SetStrobeMode*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.ILightingController.SetOnOff(System.Int32,System.Boolean)
      commentId: M:VST.Device.LightingController.ILightingController.SetOnOff(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SetOnOff(Int32, Boolean)
        VB: SetOnOff(Int32, Boolean)
      nameWithType:
        CSharp: ILightingController.SetOnOff(Int32, Boolean)
        VB: ILightingController.SetOnOff(Int32, Boolean)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.SetOnOff(System.Int32, System.Boolean)
        VB: VST.Device.LightingController.ILightingController.SetOnOff(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetOnOff
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 85
      syntax:
        content:
          CSharp: void SetOnOff(int channel, bool mode)
          VB: Sub SetOnOff(channel As Integer, mode As Boolean)
        parameters:
        - id: channel
          type: System.Int32
        - id: mode
          type: System.Boolean
      overload: VST.Device.LightingController.ILightingController.SetOnOff*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.ILightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
      commentId: M:VST.Device.LightingController.ILightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
      language: CSharp
      name:
        CSharp: SetOnOff(IChannelController, Boolean)
        VB: SetOnOff(IChannelController, Boolean)
      nameWithType:
        CSharp: ILightingController.SetOnOff(IChannelController, Boolean)
        VB: ILightingController.SetOnOff(IChannelController, Boolean)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.SetOnOff(VST.Device.LightingController.IChannelController, System.Boolean)
        VB: VST.Device.LightingController.ILightingController.SetOnOff(VST.Device.LightingController.IChannelController, System.Boolean)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetOnOff
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 86
      syntax:
        content:
          CSharp: void SetOnOff(IChannelController channel, bool mode)
          VB: Sub SetOnOff(channel As IChannelController, mode As Boolean)
        parameters:
        - id: channel
          type: VST.Device.LightingController.IChannelController
        - id: mode
          type: System.Boolean
      overload: VST.Device.LightingController.ILightingController.SetOnOff*
      modifiers:
        CSharp: []
        VB: []
    - id: VST.Device.LightingController.ILightingController.CheckSum(System.String)
      commentId: M:VST.Device.LightingController.ILightingController.CheckSum(System.String)
      language: CSharp
      name:
        CSharp: CheckSum(String)
        VB: CheckSum(String)
      nameWithType:
        CSharp: ILightingController.CheckSum(String)
        VB: ILightingController.CheckSum(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.ILightingController.CheckSum(System.String)
        VB: VST.Device.LightingController.ILightingController.CheckSum(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/Interface/ILightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CheckSum
        path: ../src/VST.Device.LightingController/Interface/ILightingController.cs
        startLine: 87
      syntax:
        content:
          CSharp: string CheckSum(string command)
          VB: Function CheckSum(command As String) As String
        parameters:
        - id: command
          type: System.String
        return:
          type: System.String
      overload: VST.Device.LightingController.ILightingController.CheckSum*
      modifiers:
        CSharp: []
        VB: []
  - id: VST.Device.LightingController.LightingControllerProvider
    commentId: T:VST.Device.LightingController.LightingControllerProvider
    language: CSharp
    name:
      CSharp: LightingControllerProvider
      VB: LightingControllerProvider
    nameWithType:
      CSharp: LightingControllerProvider
      VB: LightingControllerProvider
    qualifiedName:
      CSharp: VST.Device.LightingController.LightingControllerProvider
      VB: VST.Device.LightingController.LightingControllerProvider
    type: Class
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/LightingControllerProvider.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: LightingControllerProvider
      path: ../src/VST.Device.LightingController/LightingControllerProvider.cs
      startLine: 9
    syntax:
      content:
        CSharp: public static class LightingControllerProvider
        VB: Public Module LightingControllerProvider
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: VST.Device.LightingController.LightingControllerProvider.ModelList
      commentId: P:VST.Device.LightingController.LightingControllerProvider.ModelList
      language: CSharp
      name:
        CSharp: ModelList
        VB: ModelList
      nameWithType:
        CSharp: LightingControllerProvider.ModelList
        VB: LightingControllerProvider.ModelList
      qualifiedName:
        CSharp: VST.Device.LightingController.LightingControllerProvider.ModelList
        VB: VST.Device.LightingController.LightingControllerProvider.ModelList
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/LightingControllerProvider.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: ModelList
        path: ../src/VST.Device.LightingController/LightingControllerProvider.cs
        startLine: 11
      syntax:
        content:
          CSharp: public static List<string> ModelList { get; }
          VB: Public Shared ReadOnly Property ModelList As List(Of String)
        parameters: []
        return:
          type: System.Collections.Generic.List{System.String}
      overload: VST.Device.LightingController.LightingControllerProvider.ModelList*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: VST.Device.LightingController.LightingControllerProvider.GetController(System.String)
      commentId: M:VST.Device.LightingController.LightingControllerProvider.GetController(System.String)
      language: CSharp
      name:
        CSharp: GetController(String)
        VB: GetController(String)
      nameWithType:
        CSharp: LightingControllerProvider.GetController(String)
        VB: LightingControllerProvider.GetController(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.LightingControllerProvider.GetController(System.String)
        VB: VST.Device.LightingController.LightingControllerProvider.GetController(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/LightingControllerProvider.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: GetController
        path: ../src/VST.Device.LightingController/LightingControllerProvider.cs
        startLine: 34
      syntax:
        content:
          CSharp: public static ILightingController GetController(string modelName)
          VB: Public Shared Function GetController(modelName As String) As ILightingController
        parameters:
        - id: modelName
          type: System.String
        return:
          type: VST.Device.LightingController.ILightingController
      overload: VST.Device.LightingController.LightingControllerProvider.GetController*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: VST.Device.LightingController.Rs232LightingController
    commentId: T:VST.Device.LightingController.Rs232LightingController
    language: CSharp
    name:
      CSharp: Rs232LightingController
      VB: Rs232LightingController
    nameWithType:
      CSharp: Rs232LightingController
      VB: Rs232LightingController
    qualifiedName:
      CSharp: VST.Device.LightingController.Rs232LightingController
      VB: VST.Device.LightingController.Rs232LightingController
    type: Class
    assemblies:
    - VST.Device.LightingController
    namespace: VST.Device.LightingController
    source:
      remote:
        path: src/VST.Device.LightingController/RS232LightingController.cs
        branch: master
        repo: https://github.com/VSTechnologyTW/LightingController
      id: Rs232LightingController
      path: ../src/VST.Device.LightingController/RS232LightingController.cs
      startLine: 6
    syntax:
      content:
        CSharp: 'public class Rs232LightingController : DefaultLightingController, ILightingController, IInitialize, IRS232, ICommunicationInterfaces'
        VB: >-
          Public Class Rs232LightingController

              Inherits DefaultLightingController

              Implements ILightingController, IInitialize, IRS232, ICommunicationInterfaces
    inheritance:
    - System.Object
    - VST.Device.LightingController.DefaultLightingController
    implements:
    - VST.Device.LightingController.ILightingController
    - VST.Device.LightingController.IInitialize
    - VST.Device.LightingController.IRS232
    - VST.Device.LightingController.ICommunicationInterfaces
    inheritedMembers:
    - VST.Device.LightingController.DefaultLightingController._channelControllers
    - VST.Device.LightingController.DefaultLightingController.strobeMode
    - VST.Device.LightingController.DefaultLightingController.ModelName
    - VST.Device.LightingController.DefaultLightingController.StrobeMode
    - VST.Device.LightingController.DefaultLightingController.Item(System.Int32)
    - VST.Device.LightingController.DefaultLightingController.ChannelCount
    - VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
    - VST.Device.LightingController.DefaultLightingController.CommandEndStr
    - VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
    - VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
    - VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
    - VST.Device.LightingController.DefaultLightingController.CheckSum(System.String)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: VST.Device.LightingController.Rs232LightingController.#ctor(System.String,System.Int32)
      commentId: M:VST.Device.LightingController.Rs232LightingController.#ctor(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: Rs232LightingController(String, Int32)
        VB: Rs232LightingController(String, Int32)
      nameWithType:
        CSharp: Rs232LightingController.Rs232LightingController(String, Int32)
        VB: Rs232LightingController.Rs232LightingController(String, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.Rs232LightingController(System.String, System.Int32)
        VB: VST.Device.LightingController.Rs232LightingController.Rs232LightingController(System.String, System.Int32)
      type: Constructor
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: .ctor
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 14
      syntax:
        content:
          CSharp: public Rs232LightingController(string modelName, int channels = 0)
          VB: Public Sub New(modelName As String, channels As Integer = 0)
        parameters:
        - id: modelName
          type: System.String
        - id: channels
          type: System.Int32
      overload: VST.Device.LightingController.Rs232LightingController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: VST.Device.LightingController.Rs232LightingController.IsConnected
      commentId: P:VST.Device.LightingController.Rs232LightingController.IsConnected
      language: CSharp
      name:
        CSharp: IsConnected
        VB: IsConnected
      nameWithType:
        CSharp: Rs232LightingController.IsConnected
        VB: Rs232LightingController.IsConnected
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.IsConnected
        VB: VST.Device.LightingController.Rs232LightingController.IsConnected
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: IsConnected
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 20
      syntax:
        content:
          CSharp: public override bool IsConnected { get; }
          VB: Public Overrides ReadOnly Property IsConnected As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: VST.Device.LightingController.Rs232LightingController.IsConnected*
      overridden: VST.Device.LightingController.DefaultLightingController.IsConnected
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: VST.Device.LightingController.Rs232LightingController.CommunicationInterface
      commentId: P:VST.Device.LightingController.Rs232LightingController.CommunicationInterface
      language: CSharp
      name:
        CSharp: CommunicationInterface
        VB: CommunicationInterface
      nameWithType:
        CSharp: Rs232LightingController.CommunicationInterface
        VB: Rs232LightingController.CommunicationInterface
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.CommunicationInterface
        VB: VST.Device.LightingController.Rs232LightingController.CommunicationInterface
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommunicationInterface
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 22
      syntax:
        content:
          CSharp: public override CommunicationInterfaces CommunicationInterface { get; protected set; }
          VB: Public Overrides Property CommunicationInterface As CommunicationInterfaces
        parameters: []
        return:
          type: VST.Device.LightingController.CommunicationInterfaces
      overload: VST.Device.LightingController.Rs232LightingController.CommunicationInterface*
      overridden: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
      modifiers:
        CSharp:
        - public
        - override
        - get
        - protected set
        VB:
        - Public
        - Overrides
        - Get
        - Protected Set
    - id: VST.Device.LightingController.Rs232LightingController.CommandSent
      commentId: P:VST.Device.LightingController.Rs232LightingController.CommandSent
      language: CSharp
      name:
        CSharp: CommandSent
        VB: CommandSent
      nameWithType:
        CSharp: Rs232LightingController.CommandSent
        VB: Rs232LightingController.CommandSent
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.CommandSent
        VB: VST.Device.LightingController.Rs232LightingController.CommandSent
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: CommandSent
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 25
      syntax:
        content:
          CSharp: public override EventHandler<string> CommandSent { get; set; }
          VB: Public Overrides Property CommandSent As EventHandler(Of String)
        parameters: []
        return:
          type: System.EventHandler{System.String}
      overload: VST.Device.LightingController.Rs232LightingController.CommandSent*
      overridden: VST.Device.LightingController.DefaultLightingController.CommandSent
      modifiers:
        CSharp:
        - public
        - override
        - get
        - set
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.Rs232LightingController.HostName
      commentId: P:VST.Device.LightingController.Rs232LightingController.HostName
      language: CSharp
      name:
        CSharp: HostName
        VB: HostName
      nameWithType:
        CSharp: Rs232LightingController.HostName
        VB: Rs232LightingController.HostName
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.HostName
        VB: VST.Device.LightingController.Rs232LightingController.HostName
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: HostName
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 26
      syntax:
        content:
          CSharp: public override string HostName { get; protected set; }
          VB: Public Overrides Property HostName As String
        parameters: []
        return:
          type: System.String
      overload: VST.Device.LightingController.Rs232LightingController.HostName*
      overridden: VST.Device.LightingController.DefaultLightingController.HostName
      modifiers:
        CSharp:
        - public
        - override
        - get
        - protected set
        VB:
        - Public
        - Overrides
        - Get
        - Protected Set
    - id: VST.Device.LightingController.Rs232LightingController.Delay
      commentId: P:VST.Device.LightingController.Rs232LightingController.Delay
      language: CSharp
      name:
        CSharp: Delay
        VB: Delay
      nameWithType:
        CSharp: Rs232LightingController.Delay
        VB: Rs232LightingController.Delay
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.Delay
        VB: VST.Device.LightingController.Rs232LightingController.Delay
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Delay
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 27
      syntax:
        content:
          CSharp: public override int Delay { get; protected set; }
          VB: Public Overrides Property Delay As Integer
        parameters: []
        return:
          type: System.Int32
      overload: VST.Device.LightingController.Rs232LightingController.Delay*
      overridden: VST.Device.LightingController.DefaultLightingController.Delay
      modifiers:
        CSharp:
        - public
        - override
        - get
        - protected set
        VB:
        - Public
        - Overrides
        - Get
        - Protected Set
    - id: VST.Device.LightingController.Rs232LightingController.Port
      commentId: P:VST.Device.LightingController.Rs232LightingController.Port
      language: CSharp
      name:
        CSharp: Port
        VB: Port
      nameWithType:
        CSharp: Rs232LightingController.Port
        VB: Rs232LightingController.Port
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.Port
        VB: VST.Device.LightingController.Rs232LightingController.Port
      type: Property
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Port
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 29
      syntax:
        content:
          CSharp: public SerialPort Port { get; }
          VB: Public ReadOnly Property Port As SerialPort
        parameters: []
        return:
          type: System.IO.Ports.SerialPort
      overload: VST.Device.LightingController.Rs232LightingController.Port*
      implements:
      - VST.Device.LightingController.IRS232.Port
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: VST.Device.LightingController.Rs232LightingController.Open(System.String)
      commentId: M:VST.Device.LightingController.Rs232LightingController.Open(System.String)
      language: CSharp
      name:
        CSharp: Open(String)
        VB: Open(String)
      nameWithType:
        CSharp: Rs232LightingController.Open(String)
        VB: Rs232LightingController.Open(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.Open(System.String)
        VB: VST.Device.LightingController.Rs232LightingController.Open(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Open
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 31
      syntax:
        content:
          CSharp: public override void Open(string portName)
          VB: Public Overrides Sub Open(portName As String)
        parameters:
        - id: portName
          type: System.String
      overload: VST.Device.LightingController.Rs232LightingController.Open*
      overridden: VST.Device.LightingController.DefaultLightingController.Open(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.Rs232LightingController.Close
      commentId: M:VST.Device.LightingController.Rs232LightingController.Close
      language: CSharp
      name:
        CSharp: Close()
        VB: Close()
      nameWithType:
        CSharp: Rs232LightingController.Close()
        VB: Rs232LightingController.Close()
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.Close()
        VB: VST.Device.LightingController.Rs232LightingController.Close()
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Close
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 47
      syntax:
        content:
          CSharp: public override void Close()
          VB: Public Overrides Sub Close
      overload: VST.Device.LightingController.Rs232LightingController.Close*
      overridden: VST.Device.LightingController.DefaultLightingController.Close
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.Rs232LightingController.SendCommand(System.String)
      commentId: M:VST.Device.LightingController.Rs232LightingController.SendCommand(System.String)
      language: CSharp
      name:
        CSharp: SendCommand(String)
        VB: SendCommand(String)
      nameWithType:
        CSharp: Rs232LightingController.SendCommand(String)
        VB: Rs232LightingController.SendCommand(String)
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.SendCommand(System.String)
        VB: VST.Device.LightingController.Rs232LightingController.SendCommand(System.String)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SendCommand
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 53
      syntax:
        content:
          CSharp: public override void SendCommand(string command)
          VB: Public Overrides Sub SendCommand(command As String)
        parameters:
        - id: command
          type: System.String
      overload: VST.Device.LightingController.Rs232LightingController.SendCommand*
      overridden: VST.Device.LightingController.DefaultLightingController.SendCommand(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.Rs232LightingController.SetIntensity(System.Int32,System.Int32)
      commentId: M:VST.Device.LightingController.Rs232LightingController.SetIntensity(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetIntensity(Int32, Int32)
        VB: SetIntensity(Int32, Int32)
      nameWithType:
        CSharp: Rs232LightingController.SetIntensity(Int32, Int32)
        VB: Rs232LightingController.SetIntensity(Int32, Int32)
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.SetIntensity(System.Int32, System.Int32)
        VB: VST.Device.LightingController.Rs232LightingController.SetIntensity(System.Int32, System.Int32)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetIntensity
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 61
      syntax:
        content:
          CSharp: public override void SetIntensity(int channel, int intensity)
          VB: Public Overrides Sub SetIntensity(channel As Integer, intensity As Integer)
        parameters:
        - id: channel
          type: System.Int32
        - id: intensity
          type: System.Int32
      overload: VST.Device.LightingController.Rs232LightingController.SetIntensity*
      overridden: VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.Rs232LightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      commentId: M:VST.Device.LightingController.Rs232LightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      language: CSharp
      name:
        CSharp: SetStrobeMode(Int32, StrobeModes)
        VB: SetStrobeMode(Int32, StrobeModes)
      nameWithType:
        CSharp: Rs232LightingController.SetStrobeMode(Int32, StrobeModes)
        VB: Rs232LightingController.SetStrobeMode(Int32, StrobeModes)
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.SetStrobeMode(System.Int32, VST.Device.LightingController.StrobeModes)
        VB: VST.Device.LightingController.Rs232LightingController.SetStrobeMode(System.Int32, VST.Device.LightingController.StrobeModes)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetStrobeMode
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 69
      syntax:
        content:
          CSharp: public override void SetStrobeMode(int channel, StrobeModes mode)
          VB: Public Overrides Sub SetStrobeMode(channel As Integer, mode As StrobeModes)
        parameters:
        - id: channel
          type: System.Int32
        - id: mode
          type: VST.Device.LightingController.StrobeModes
      overload: VST.Device.LightingController.Rs232LightingController.SetStrobeMode*
      overridden: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.Rs232LightingController.SetOnOff(System.Int32,System.Boolean)
      commentId: M:VST.Device.LightingController.Rs232LightingController.SetOnOff(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SetOnOff(Int32, Boolean)
        VB: SetOnOff(Int32, Boolean)
      nameWithType:
        CSharp: Rs232LightingController.SetOnOff(Int32, Boolean)
        VB: Rs232LightingController.SetOnOff(Int32, Boolean)
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.SetOnOff(System.Int32, System.Boolean)
        VB: VST.Device.LightingController.Rs232LightingController.SetOnOff(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: SetOnOff
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 78
      syntax:
        content:
          CSharp: public override void SetOnOff(int channel, bool mode)
          VB: Public Overrides Sub SetOnOff(channel As Integer, mode As Boolean)
        parameters:
        - id: channel
          type: System.Int32
        - id: mode
          type: System.Boolean
      overload: VST.Device.LightingController.Rs232LightingController.SetOnOff*
      overridden: VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32,System.Boolean)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: VST.Device.LightingController.Rs232LightingController.Initialize
      commentId: M:VST.Device.LightingController.Rs232LightingController.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: Rs232LightingController.Initialize()
        VB: Rs232LightingController.Initialize()
      qualifiedName:
        CSharp: VST.Device.LightingController.Rs232LightingController.Initialize()
        VB: VST.Device.LightingController.Rs232LightingController.Initialize()
      type: Method
      assemblies:
      - VST.Device.LightingController
      namespace: VST.Device.LightingController
      source:
        remote:
          path: src/VST.Device.LightingController/RS232LightingController.cs
          branch: master
          repo: https://github.com/VSTechnologyTW/LightingController
        id: Initialize
        path: ../src/VST.Device.LightingController/RS232LightingController.cs
        startLine: 86
      syntax:
        content:
          CSharp: public override void Initialize()
          VB: Public Overrides Sub Initialize
      overload: VST.Device.LightingController.Rs232LightingController.Initialize*
      overridden: VST.Device.LightingController.DefaultLightingController.Initialize
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  VST.Device.LightingController:
    name:
      CSharp:
      - name: VST.Device.LightingController
        nameWithType: VST.Device.LightingController
        qualifiedName: VST.Device.LightingController
      VB:
      - name: VST.Device.LightingController
        nameWithType: VST.Device.LightingController
        qualifiedName: VST.Device.LightingController
    isDefinition: true
    commentId: N:VST.Device.LightingController
  VST.Device.LightingController.IChannelController:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      VB:
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
    isDefinition: true
    parent: VST.Device.LightingController
    commentId: T:VST.Device.LightingController.IChannelController
  VST.Device.LightingController.IInitialize:
    name:
      CSharp:
      - id: VST.Device.LightingController.IInitialize
        name: IInitialize
        nameWithType: IInitialize
        qualifiedName: VST.Device.LightingController.IInitialize
      VB:
      - id: VST.Device.LightingController.IInitialize
        name: IInitialize
        nameWithType: IInitialize
        qualifiedName: VST.Device.LightingController.IInitialize
    isDefinition: true
    parent: VST.Device.LightingController
    commentId: T:VST.Device.LightingController.IInitialize
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  VST.Device.LightingController.ChannelController.Index*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.Index*
        name: Index
        nameWithType: ChannelController.Index
        qualifiedName: VST.Device.LightingController.ChannelController.Index
      VB:
      - id: VST.Device.LightingController.ChannelController.Index*
        name: Index
        nameWithType: ChannelController.Index
        qualifiedName: VST.Device.LightingController.ChannelController.Index
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.Index
  VST.Device.LightingController.IChannelController.Index:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.Index
        name: Index
        nameWithType: IChannelController.Index
        qualifiedName: VST.Device.LightingController.IChannelController.Index
      VB:
      - id: VST.Device.LightingController.IChannelController.Index
        name: Index
        nameWithType: IChannelController.Index
        qualifiedName: VST.Device.LightingController.IChannelController.Index
    isDefinition: true
    parent: VST.Device.LightingController.IChannelController
    commentId: P:VST.Device.LightingController.IChannelController.Index
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.Boolean}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Boolean}
  VST.Device.LightingController.ChannelController.IsOn*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.IsOn*
        name: IsOn
        nameWithType: ChannelController.IsOn
        qualifiedName: VST.Device.LightingController.ChannelController.IsOn
      VB:
      - id: VST.Device.LightingController.ChannelController.IsOn*
        name: IsOn
        nameWithType: ChannelController.IsOn
        qualifiedName: VST.Device.LightingController.ChannelController.IsOn
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.IsOn
  VST.Device.LightingController.IChannelController.IsOn:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.IsOn
        name: IsOn
        nameWithType: IChannelController.IsOn
        qualifiedName: VST.Device.LightingController.IChannelController.IsOn
      VB:
      - id: VST.Device.LightingController.IChannelController.IsOn
        name: IsOn
        nameWithType: IChannelController.IsOn
        qualifiedName: VST.Device.LightingController.IChannelController.IsOn
    isDefinition: true
    parent: VST.Device.LightingController.IChannelController
    commentId: P:VST.Device.LightingController.IChannelController.IsOn
  System.Nullable{VST.Device.LightingController.StrobeModes}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{VST.Device.LightingController.StrobeModes}
  VST.Device.LightingController.ChannelController.Mode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.Mode*
        name: Mode
        nameWithType: ChannelController.Mode
        qualifiedName: VST.Device.LightingController.ChannelController.Mode
      VB:
      - id: VST.Device.LightingController.ChannelController.Mode*
        name: Mode
        nameWithType: ChannelController.Mode
        qualifiedName: VST.Device.LightingController.ChannelController.Mode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.Mode
  VST.Device.LightingController.IChannelController.Mode:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.Mode
        name: Mode
        nameWithType: IChannelController.Mode
        qualifiedName: VST.Device.LightingController.IChannelController.Mode
      VB:
      - id: VST.Device.LightingController.IChannelController.Mode
        name: Mode
        nameWithType: IChannelController.Mode
        qualifiedName: VST.Device.LightingController.IChannelController.Mode
    isDefinition: true
    parent: VST.Device.LightingController.IChannelController
    commentId: P:VST.Device.LightingController.IChannelController.Mode
  System.Nullable{System.Int32}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Int32}
  VST.Device.LightingController.ChannelController.Intensity*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.Intensity*
        name: Intensity
        nameWithType: ChannelController.Intensity
        qualifiedName: VST.Device.LightingController.ChannelController.Intensity
      VB:
      - id: VST.Device.LightingController.ChannelController.Intensity*
        name: Intensity
        nameWithType: ChannelController.Intensity
        qualifiedName: VST.Device.LightingController.ChannelController.Intensity
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.Intensity
  VST.Device.LightingController.IChannelController.Intensity:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.Intensity
        name: Intensity
        nameWithType: IChannelController.Intensity
        qualifiedName: VST.Device.LightingController.IChannelController.Intensity
      VB:
      - id: VST.Device.LightingController.IChannelController.Intensity
        name: Intensity
        nameWithType: IChannelController.Intensity
        qualifiedName: VST.Device.LightingController.IChannelController.Intensity
    isDefinition: true
    parent: VST.Device.LightingController.IChannelController
    commentId: P:VST.Device.LightingController.IChannelController.Intensity
  VST.Device.LightingController.ILightingController:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController
        name: ILightingController
        nameWithType: ILightingController
        qualifiedName: VST.Device.LightingController.ILightingController
      VB:
      - id: VST.Device.LightingController.ILightingController
        name: ILightingController
        nameWithType: ILightingController
        qualifiedName: VST.Device.LightingController.ILightingController
    isDefinition: true
    parent: VST.Device.LightingController
    commentId: T:VST.Device.LightingController.ILightingController
  VST.Device.LightingController.ChannelController.Owner*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.Owner*
        name: Owner
        nameWithType: ChannelController.Owner
        qualifiedName: VST.Device.LightingController.ChannelController.Owner
      VB:
      - id: VST.Device.LightingController.ChannelController.Owner*
        name: Owner
        nameWithType: ChannelController.Owner
        qualifiedName: VST.Device.LightingController.ChannelController.Owner
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.Owner
  VST.Device.LightingController.IChannelController.Owner:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.Owner
        name: Owner
        nameWithType: IChannelController.Owner
        qualifiedName: VST.Device.LightingController.IChannelController.Owner
      VB:
      - id: VST.Device.LightingController.IChannelController.Owner
        name: Owner
        nameWithType: IChannelController.Owner
        qualifiedName: VST.Device.LightingController.IChannelController.Owner
    isDefinition: true
    parent: VST.Device.LightingController.IChannelController
    commentId: P:VST.Device.LightingController.IChannelController.Owner
  VST.Device.LightingController.ChannelController.#ctor*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.#ctor*
        name: ChannelController
        nameWithType: ChannelController.ChannelController
        qualifiedName: VST.Device.LightingController.ChannelController.ChannelController
      VB:
      - id: VST.Device.LightingController.ChannelController.#ctor*
        name: ChannelController
        nameWithType: ChannelController.ChannelController
        qualifiedName: VST.Device.LightingController.ChannelController.ChannelController
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.#ctor
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  VST.Device.LightingController.ChannelController.SendCommand*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.SendCommand*
        name: SendCommand
        nameWithType: ChannelController.SendCommand
        qualifiedName: VST.Device.LightingController.ChannelController.SendCommand
      VB:
      - id: VST.Device.LightingController.ChannelController.SendCommand*
        name: SendCommand
        nameWithType: ChannelController.SendCommand
        qualifiedName: VST.Device.LightingController.ChannelController.SendCommand
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.SendCommand
  VST.Device.LightingController.IChannelController.SendCommand(System.String):
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.SendCommand(System.String)
        name: SendCommand
        nameWithType: IChannelController.SendCommand
        qualifiedName: VST.Device.LightingController.IChannelController.SendCommand
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.IChannelController.SendCommand(System.String)
        name: SendCommand
        nameWithType: IChannelController.SendCommand
        qualifiedName: VST.Device.LightingController.IChannelController.SendCommand
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.IChannelController
    commentId: M:VST.Device.LightingController.IChannelController.SendCommand(System.String)
  VST.Device.LightingController.ChannelController.SetIntensity*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.SetIntensity*
        name: SetIntensity
        nameWithType: ChannelController.SetIntensity
        qualifiedName: VST.Device.LightingController.ChannelController.SetIntensity
      VB:
      - id: VST.Device.LightingController.ChannelController.SetIntensity*
        name: SetIntensity
        nameWithType: ChannelController.SetIntensity
        qualifiedName: VST.Device.LightingController.ChannelController.SetIntensity
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.SetIntensity
  VST.Device.LightingController.IChannelController.SetIntensity(System.Int32):
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.SetIntensity(System.Int32)
        name: SetIntensity
        nameWithType: IChannelController.SetIntensity
        qualifiedName: VST.Device.LightingController.IChannelController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.IChannelController.SetIntensity(System.Int32)
        name: SetIntensity
        nameWithType: IChannelController.SetIntensity
        qualifiedName: VST.Device.LightingController.IChannelController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.IChannelController
    commentId: M:VST.Device.LightingController.IChannelController.SetIntensity(System.Int32)
  VST.Device.LightingController.StrobeModes:
    name:
      CSharp:
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      VB:
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
    isDefinition: true
    parent: VST.Device.LightingController
    commentId: T:VST.Device.LightingController.StrobeModes
  VST.Device.LightingController.ChannelController.SetStrobeMode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: ChannelController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.ChannelController.SetStrobeMode
      VB:
      - id: VST.Device.LightingController.ChannelController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: ChannelController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.ChannelController.SetStrobeMode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.SetStrobeMode
  VST.Device.LightingController.IChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes):
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: IChannelController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.IChannelController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.IChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: IChannelController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.IChannelController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.IChannelController
    commentId: M:VST.Device.LightingController.IChannelController.SetStrobeMode(VST.Device.LightingController.StrobeModes)
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  VST.Device.LightingController.ChannelController.SetOnOff*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.SetOnOff*
        name: SetOnOff
        nameWithType: ChannelController.SetOnOff
        qualifiedName: VST.Device.LightingController.ChannelController.SetOnOff
      VB:
      - id: VST.Device.LightingController.ChannelController.SetOnOff*
        name: SetOnOff
        nameWithType: ChannelController.SetOnOff
        qualifiedName: VST.Device.LightingController.ChannelController.SetOnOff
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.SetOnOff
  VST.Device.LightingController.IChannelController.SetOnOff(System.Boolean):
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.SetOnOff(System.Boolean)
        name: SetOnOff
        nameWithType: IChannelController.SetOnOff
        qualifiedName: VST.Device.LightingController.IChannelController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.IChannelController.SetOnOff(System.Boolean)
        name: SetOnOff
        nameWithType: IChannelController.SetOnOff
        qualifiedName: VST.Device.LightingController.IChannelController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.IChannelController
    commentId: M:VST.Device.LightingController.IChannelController.SetOnOff(System.Boolean)
  VST.Device.LightingController.ChannelController.Initialize*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController.Initialize*
        name: Initialize
        nameWithType: ChannelController.Initialize
        qualifiedName: VST.Device.LightingController.ChannelController.Initialize
      VB:
      - id: VST.Device.LightingController.ChannelController.Initialize*
        name: Initialize
        nameWithType: ChannelController.Initialize
        qualifiedName: VST.Device.LightingController.ChannelController.Initialize
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ChannelController.Initialize
  VST.Device.LightingController.IInitialize.Initialize:
    name:
      CSharp:
      - id: VST.Device.LightingController.IInitialize.Initialize
        name: Initialize
        nameWithType: IInitialize.Initialize
        qualifiedName: VST.Device.LightingController.IInitialize.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.IInitialize.Initialize
        name: Initialize
        nameWithType: IInitialize.Initialize
        qualifiedName: VST.Device.LightingController.IInitialize.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.IInitialize
    commentId: M:VST.Device.LightingController.IInitialize.Initialize
  VST.Device.LightingController.ChannelController:
    name:
      CSharp:
      - id: VST.Device.LightingController.ChannelController
        name: ChannelController
        nameWithType: ChannelController
        qualifiedName: VST.Device.LightingController.ChannelController
      VB:
      - id: VST.Device.LightingController.ChannelController
        name: ChannelController
        nameWithType: ChannelController
        qualifiedName: VST.Device.LightingController.ChannelController
    isDefinition: true
    commentId: T:VST.Device.LightingController.ChannelController
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{System.Int32,VST.Device.LightingController.IChannelController}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.Int32,VST.Device.LightingController.IChannelController}
  System.EventHandler`1:
    name:
      CSharp:
      - id: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        qualifiedName: System.EventHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TEventArgs
        nameWithType: TEventArgs
        qualifiedName: TEventArgs
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        qualifiedName: System.EventHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TEventArgs
        nameWithType: TEventArgs
        qualifiedName: TEventArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.EventHandler`1
  System.EventHandler{System.String}:
    name:
      CSharp:
      - id: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        qualifiedName: System.EventHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        qualifiedName: System.EventHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.EventHandler`1
    parent: System
    commentId: T:System.EventHandler{System.String}
  VST.Device.LightingController.DefaultLightingController.CommandSent*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CommandSent*
        name: CommandSent
        nameWithType: DefaultLightingController.CommandSent
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandSent
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CommandSent*
        name: CommandSent
        nameWithType: DefaultLightingController.CommandSent
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandSent
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.CommandSent
  VST.Device.LightingController.ILightingController.CommandSent:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CommandSent
        name: CommandSent
        nameWithType: ILightingController.CommandSent
        qualifiedName: VST.Device.LightingController.ILightingController.CommandSent
      VB:
      - id: VST.Device.LightingController.ILightingController.CommandSent
        name: CommandSent
        nameWithType: ILightingController.CommandSent
        qualifiedName: VST.Device.LightingController.ILightingController.CommandSent
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.CommandSent
  VST.Device.LightingController.DefaultLightingController.HostName*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.HostName*
        name: HostName
        nameWithType: DefaultLightingController.HostName
        qualifiedName: VST.Device.LightingController.DefaultLightingController.HostName
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.HostName*
        name: HostName
        nameWithType: DefaultLightingController.HostName
        qualifiedName: VST.Device.LightingController.DefaultLightingController.HostName
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.HostName
  VST.Device.LightingController.ILightingController.HostName:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.HostName
        name: HostName
        nameWithType: ILightingController.HostName
        qualifiedName: VST.Device.LightingController.ILightingController.HostName
      VB:
      - id: VST.Device.LightingController.ILightingController.HostName
        name: HostName
        nameWithType: ILightingController.HostName
        qualifiedName: VST.Device.LightingController.ILightingController.HostName
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.HostName
  VST.Device.LightingController.DefaultLightingController.Delay*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Delay*
        name: Delay
        nameWithType: DefaultLightingController.Delay
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Delay
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Delay*
        name: Delay
        nameWithType: DefaultLightingController.Delay
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Delay
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.Delay
  VST.Device.LightingController.ILightingController.Delay:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.Delay
        name: Delay
        nameWithType: ILightingController.Delay
        qualifiedName: VST.Device.LightingController.ILightingController.Delay
      VB:
      - id: VST.Device.LightingController.ILightingController.Delay
        name: Delay
        nameWithType: ILightingController.Delay
        qualifiedName: VST.Device.LightingController.ILightingController.Delay
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.Delay
  VST.Device.LightingController.DefaultLightingController.IsConnected*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.IsConnected*
        name: IsConnected
        nameWithType: DefaultLightingController.IsConnected
        qualifiedName: VST.Device.LightingController.DefaultLightingController.IsConnected
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.IsConnected*
        name: IsConnected
        nameWithType: DefaultLightingController.IsConnected
        qualifiedName: VST.Device.LightingController.DefaultLightingController.IsConnected
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.IsConnected
  VST.Device.LightingController.ILightingController.IsConnected:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.IsConnected
        name: IsConnected
        nameWithType: ILightingController.IsConnected
        qualifiedName: VST.Device.LightingController.ILightingController.IsConnected
      VB:
      - id: VST.Device.LightingController.ILightingController.IsConnected
        name: IsConnected
        nameWithType: ILightingController.IsConnected
        qualifiedName: VST.Device.LightingController.ILightingController.IsConnected
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.IsConnected
  VST.Device.LightingController.DefaultLightingController.ModelName*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.ModelName*
        name: ModelName
        nameWithType: DefaultLightingController.ModelName
        qualifiedName: VST.Device.LightingController.DefaultLightingController.ModelName
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.ModelName*
        name: ModelName
        nameWithType: DefaultLightingController.ModelName
        qualifiedName: VST.Device.LightingController.DefaultLightingController.ModelName
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.ModelName
  VST.Device.LightingController.ILightingController.ModelName:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.ModelName
        name: ModelName
        nameWithType: ILightingController.ModelName
        qualifiedName: VST.Device.LightingController.ILightingController.ModelName
      VB:
      - id: VST.Device.LightingController.ILightingController.ModelName
        name: ModelName
        nameWithType: ILightingController.ModelName
        qualifiedName: VST.Device.LightingController.ILightingController.ModelName
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.ModelName
  VST.Device.LightingController.DefaultLightingController.StrobeMode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.StrobeMode*
        name: StrobeMode
        nameWithType: DefaultLightingController.StrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.StrobeMode
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.StrobeMode*
        name: StrobeMode
        nameWithType: DefaultLightingController.StrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.StrobeMode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.StrobeMode
  VST.Device.LightingController.ILightingController.StrobeMode:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.StrobeMode
        name: StrobeMode
        nameWithType: ILightingController.StrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.StrobeMode
      VB:
      - id: VST.Device.LightingController.ILightingController.StrobeMode
        name: StrobeMode
        nameWithType: ILightingController.StrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.StrobeMode
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.StrobeMode
  VST.Device.LightingController.CommunicationInterfaces:
    name:
      CSharp:
      - id: VST.Device.LightingController.CommunicationInterfaces
        name: CommunicationInterfaces
        nameWithType: CommunicationInterfaces
        qualifiedName: VST.Device.LightingController.CommunicationInterfaces
      VB:
      - id: VST.Device.LightingController.CommunicationInterfaces
        name: CommunicationInterfaces
        nameWithType: CommunicationInterfaces
        qualifiedName: VST.Device.LightingController.CommunicationInterfaces
    isDefinition: true
    parent: VST.Device.LightingController
    commentId: T:VST.Device.LightingController.CommunicationInterfaces
  VST.Device.LightingController.DefaultLightingController.CommunicationInterface*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CommunicationInterface*
        name: CommunicationInterface
        nameWithType: DefaultLightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CommunicationInterface*
        name: CommunicationInterface
        nameWithType: DefaultLightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.CommunicationInterface
  VST.Device.LightingController.ILightingController.CommunicationInterface:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CommunicationInterface
        name: CommunicationInterface
        nameWithType: ILightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.ILightingController.CommunicationInterface
      VB:
      - id: VST.Device.LightingController.ILightingController.CommunicationInterface
        name: CommunicationInterface
        nameWithType: ILightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.ILightingController.CommunicationInterface
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.CommunicationInterface
  VST.Device.LightingController.DefaultLightingController.Item*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Item*
        name: Item
        nameWithType: DefaultLightingController.Item
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Item
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Item*
        name: Item
        nameWithType: DefaultLightingController.Item
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Item
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.Item
  VST.Device.LightingController.ILightingController.Item(System.Int32):
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.Item(System.Int32)
        name: Item
        nameWithType: ILightingController.Item
        qualifiedName: VST.Device.LightingController.ILightingController.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: VST.Device.LightingController.ILightingController.Item(System.Int32)
        name: Item
        nameWithType: ILightingController.Item
        qualifiedName: VST.Device.LightingController.ILightingController.Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.Item(System.Int32)
  VST.Device.LightingController.DefaultLightingController.ChannelCount*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.ChannelCount*
        name: ChannelCount
        nameWithType: DefaultLightingController.ChannelCount
        qualifiedName: VST.Device.LightingController.DefaultLightingController.ChannelCount
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.ChannelCount*
        name: ChannelCount
        nameWithType: DefaultLightingController.ChannelCount
        qualifiedName: VST.Device.LightingController.DefaultLightingController.ChannelCount
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.ChannelCount
  VST.Device.LightingController.ILightingController.ChannelCount:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.ChannelCount
        name: ChannelCount
        nameWithType: ILightingController.ChannelCount
        qualifiedName: VST.Device.LightingController.ILightingController.ChannelCount
      VB:
      - id: VST.Device.LightingController.ILightingController.ChannelCount
        name: ChannelCount
        nameWithType: ILightingController.ChannelCount
        qualifiedName: VST.Device.LightingController.ILightingController.ChannelCount
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.ChannelCount
  VST.Device.LightingController.DefaultLightingController.CommandHeaderStr*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr*
        name: CommandHeaderStr
        nameWithType: DefaultLightingController.CommandHeaderStr
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr*
        name: CommandHeaderStr
        nameWithType: DefaultLightingController.CommandHeaderStr
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
  VST.Device.LightingController.ILightingController.CommandHeaderStr:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CommandHeaderStr
        name: CommandHeaderStr
        nameWithType: ILightingController.CommandHeaderStr
        qualifiedName: VST.Device.LightingController.ILightingController.CommandHeaderStr
      VB:
      - id: VST.Device.LightingController.ILightingController.CommandHeaderStr
        name: CommandHeaderStr
        nameWithType: ILightingController.CommandHeaderStr
        qualifiedName: VST.Device.LightingController.ILightingController.CommandHeaderStr
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.CommandHeaderStr
  VST.Device.LightingController.DefaultLightingController.CommandEndStr*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CommandEndStr*
        name: CommandEndStr
        nameWithType: DefaultLightingController.CommandEndStr
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandEndStr
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CommandEndStr*
        name: CommandEndStr
        nameWithType: DefaultLightingController.CommandEndStr
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandEndStr
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.CommandEndStr
  VST.Device.LightingController.ILightingController.CommandEndStr:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CommandEndStr
        name: CommandEndStr
        nameWithType: ILightingController.CommandEndStr
        qualifiedName: VST.Device.LightingController.ILightingController.CommandEndStr
      VB:
      - id: VST.Device.LightingController.ILightingController.CommandEndStr
        name: CommandEndStr
        nameWithType: ILightingController.CommandEndStr
        qualifiedName: VST.Device.LightingController.ILightingController.CommandEndStr
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: P:VST.Device.LightingController.ILightingController.CommandEndStr
  VST.Device.LightingController.DefaultLightingController.#ctor*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.#ctor*
        name: DefaultLightingController
        nameWithType: DefaultLightingController.DefaultLightingController
        qualifiedName: VST.Device.LightingController.DefaultLightingController.DefaultLightingController
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.#ctor*
        name: DefaultLightingController
        nameWithType: DefaultLightingController.DefaultLightingController
        qualifiedName: VST.Device.LightingController.DefaultLightingController.DefaultLightingController
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.#ctor
  VST.Device.LightingController.DefaultLightingController.SendCommand*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SendCommand*
        name: SendCommand
        nameWithType: DefaultLightingController.SendCommand
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SendCommand
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SendCommand*
        name: SendCommand
        nameWithType: DefaultLightingController.SendCommand
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SendCommand
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.SendCommand
  VST.Device.LightingController.ILightingController.SendCommand(System.String):
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SendCommand(System.String)
        name: SendCommand
        nameWithType: ILightingController.SendCommand
        qualifiedName: VST.Device.LightingController.ILightingController.SendCommand
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.SendCommand(System.String)
        name: SendCommand
        nameWithType: ILightingController.SendCommand
        qualifiedName: VST.Device.LightingController.ILightingController.SendCommand
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.SendCommand(System.String)
  VST.Device.LightingController.DefaultLightingController.Open*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Open*
        name: Open
        nameWithType: DefaultLightingController.Open
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Open
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Open*
        name: Open
        nameWithType: DefaultLightingController.Open
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Open
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.Open
  VST.Device.LightingController.ILightingController.Open(System.String):
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.Open(System.String)
        name: Open
        nameWithType: ILightingController.Open
        qualifiedName: VST.Device.LightingController.ILightingController.Open
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.Open(System.String)
        name: Open
        nameWithType: ILightingController.Open
        qualifiedName: VST.Device.LightingController.ILightingController.Open
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.Open(System.String)
  VST.Device.LightingController.DefaultLightingController.Close*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Close*
        name: Close
        nameWithType: DefaultLightingController.Close
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Close
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Close*
        name: Close
        nameWithType: DefaultLightingController.Close
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Close
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.Close
  VST.Device.LightingController.ILightingController.Close:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.Close
        name: Close
        nameWithType: ILightingController.Close
        qualifiedName: VST.Device.LightingController.ILightingController.Close
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.Close
        name: Close
        nameWithType: ILightingController.Close
        qualifiedName: VST.Device.LightingController.ILightingController.Close
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.Close
  VST.Device.LightingController.DefaultLightingController.SetIntensity*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SetIntensity*
        name: SetIntensity
        nameWithType: DefaultLightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetIntensity
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SetIntensity*
        name: SetIntensity
        nameWithType: DefaultLightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetIntensity
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.SetIntensity
  VST.Device.LightingController.ILightingController.SetIntensity(System.Int32,System.Int32):
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SetIntensity(System.Int32,System.Int32)
        name: SetIntensity
        nameWithType: ILightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.ILightingController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.SetIntensity(System.Int32,System.Int32)
        name: SetIntensity
        nameWithType: ILightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.ILightingController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.SetIntensity(System.Int32,System.Int32)
  VST.Device.LightingController.ILightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32):
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
        name: SetIntensity
        nameWithType: ILightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.ILightingController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
        name: SetIntensity
        nameWithType: ILightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.ILightingController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
  VST.Device.LightingController.DefaultLightingController.SetStrobeMode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: DefaultLightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetStrobeMode
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: DefaultLightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetStrobeMode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.SetStrobeMode
  VST.Device.LightingController.ILightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes):
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: ILightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: ILightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
  ? VST.Device.LightingController.ILightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
  : name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: ILightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: ILightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
  VST.Device.LightingController.DefaultLightingController.SetOnOff*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SetOnOff*
        name: SetOnOff
        nameWithType: DefaultLightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetOnOff
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SetOnOff*
        name: SetOnOff
        nameWithType: DefaultLightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetOnOff
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.SetOnOff
  VST.Device.LightingController.ILightingController.SetOnOff(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SetOnOff(System.Int32,System.Boolean)
        name: SetOnOff
        nameWithType: ILightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.ILightingController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.SetOnOff(System.Int32,System.Boolean)
        name: SetOnOff
        nameWithType: ILightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.ILightingController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.SetOnOff(System.Int32,System.Boolean)
  VST.Device.LightingController.ILightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean):
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
        name: SetOnOff
        nameWithType: ILightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.ILightingController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
        name: SetOnOff
        nameWithType: ILightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.ILightingController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
  VST.Device.LightingController.DefaultLightingController.CheckSum*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CheckSum*
        name: CheckSum
        nameWithType: DefaultLightingController.CheckSum
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CheckSum
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CheckSum*
        name: CheckSum
        nameWithType: DefaultLightingController.CheckSum
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CheckSum
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.CheckSum
  VST.Device.LightingController.ILightingController.CheckSum(System.String):
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CheckSum(System.String)
        name: CheckSum
        nameWithType: ILightingController.CheckSum
        qualifiedName: VST.Device.LightingController.ILightingController.CheckSum
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.ILightingController.CheckSum(System.String)
        name: CheckSum
        nameWithType: ILightingController.CheckSum
        qualifiedName: VST.Device.LightingController.ILightingController.CheckSum
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.ILightingController
    commentId: M:VST.Device.LightingController.ILightingController.CheckSum(System.String)
  VST.Device.LightingController.DefaultLightingController.Initialize*:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Initialize*
        name: Initialize
        nameWithType: DefaultLightingController.Initialize
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Initialize
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Initialize*
        name: Initialize
        nameWithType: DefaultLightingController.Initialize
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Initialize
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.DefaultLightingController.Initialize
  VST.Device.LightingController.DefaultLightingController:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController
        name: DefaultLightingController
        nameWithType: DefaultLightingController
        qualifiedName: VST.Device.LightingController.DefaultLightingController
      VB:
      - id: VST.Device.LightingController.DefaultLightingController
        name: DefaultLightingController
        nameWithType: DefaultLightingController
        qualifiedName: VST.Device.LightingController.DefaultLightingController
    isDefinition: true
    parent: VST.Device.LightingController
    commentId: T:VST.Device.LightingController.DefaultLightingController
  VST.Device.LightingController.DefaultLightingController._channelControllers:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController._channelControllers
        name: _channelControllers
        nameWithType: DefaultLightingController._channelControllers
        qualifiedName: VST.Device.LightingController.DefaultLightingController._channelControllers
      VB:
      - id: VST.Device.LightingController.DefaultLightingController._channelControllers
        name: _channelControllers
        nameWithType: DefaultLightingController._channelControllers
        qualifiedName: VST.Device.LightingController.DefaultLightingController._channelControllers
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: F:VST.Device.LightingController.DefaultLightingController._channelControllers
  VST.Device.LightingController.DefaultLightingController.strobeMode:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.strobeMode
        name: strobeMode
        nameWithType: DefaultLightingController.strobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.strobeMode
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.strobeMode
        name: strobeMode
        nameWithType: DefaultLightingController.strobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.strobeMode
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: F:VST.Device.LightingController.DefaultLightingController.strobeMode
  VST.Device.LightingController.DefaultLightingController.ModelName:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.ModelName
        name: ModelName
        nameWithType: DefaultLightingController.ModelName
        qualifiedName: VST.Device.LightingController.DefaultLightingController.ModelName
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.ModelName
        name: ModelName
        nameWithType: DefaultLightingController.ModelName
        qualifiedName: VST.Device.LightingController.DefaultLightingController.ModelName
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.ModelName
  VST.Device.LightingController.DefaultLightingController.StrobeMode:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.StrobeMode
        name: StrobeMode
        nameWithType: DefaultLightingController.StrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.StrobeMode
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.StrobeMode
        name: StrobeMode
        nameWithType: DefaultLightingController.StrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.StrobeMode
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.StrobeMode
  VST.Device.LightingController.DefaultLightingController.Item(System.Int32):
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Item(System.Int32)
        name: Item
        nameWithType: DefaultLightingController.Item
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Item(System.Int32)
        name: Item
        nameWithType: DefaultLightingController.Item
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.Item(System.Int32)
  VST.Device.LightingController.DefaultLightingController.ChannelCount:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.ChannelCount
        name: ChannelCount
        nameWithType: DefaultLightingController.ChannelCount
        qualifiedName: VST.Device.LightingController.DefaultLightingController.ChannelCount
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.ChannelCount
        name: ChannelCount
        nameWithType: DefaultLightingController.ChannelCount
        qualifiedName: VST.Device.LightingController.DefaultLightingController.ChannelCount
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.ChannelCount
  VST.Device.LightingController.DefaultLightingController.CommandHeaderStr:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
        name: CommandHeaderStr
        nameWithType: DefaultLightingController.CommandHeaderStr
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
        name: CommandHeaderStr
        nameWithType: DefaultLightingController.CommandHeaderStr
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.CommandHeaderStr
  VST.Device.LightingController.DefaultLightingController.CommandEndStr:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CommandEndStr
        name: CommandEndStr
        nameWithType: DefaultLightingController.CommandEndStr
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandEndStr
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CommandEndStr
        name: CommandEndStr
        nameWithType: DefaultLightingController.CommandEndStr
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandEndStr
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.CommandEndStr
  ? VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
  : name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
        name: SetIntensity
        nameWithType: DefaultLightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
        name: SetIntensity
        nameWithType: DefaultLightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.SetIntensity(VST.Device.LightingController.IChannelController,System.Int32)
  ? VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
  : name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: DefaultLightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: DefaultLightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.SetStrobeMode(VST.Device.LightingController.IChannelController,VST.Device.LightingController.StrobeModes)
  ? VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
  : name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
        name: SetOnOff
        nameWithType: DefaultLightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
        name: SetOnOff
        nameWithType: DefaultLightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: VST.Device.LightingController.IChannelController
        name: IChannelController
        nameWithType: IChannelController
        qualifiedName: VST.Device.LightingController.IChannelController
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.SetOnOff(VST.Device.LightingController.IChannelController,System.Boolean)
  VST.Device.LightingController.DefaultLightingController.CheckSum(System.String):
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CheckSum(System.String)
        name: CheckSum
        nameWithType: DefaultLightingController.CheckSum
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CheckSum
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CheckSum(System.String)
        name: CheckSum
        nameWithType: DefaultLightingController.CheckSum
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CheckSum
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.CheckSum(System.String)
  VST.Device.LightingController.IEthernet:
    name:
      CSharp:
      - id: VST.Device.LightingController.IEthernet
        name: IEthernet
        nameWithType: IEthernet
        qualifiedName: VST.Device.LightingController.IEthernet
      VB:
      - id: VST.Device.LightingController.IEthernet
        name: IEthernet
        nameWithType: IEthernet
        qualifiedName: VST.Device.LightingController.IEthernet
    isDefinition: true
    parent: VST.Device.LightingController
    commentId: T:VST.Device.LightingController.IEthernet
  VST.Device.LightingController.ICommunicationInterfaces:
    name:
      CSharp:
      - id: VST.Device.LightingController.ICommunicationInterfaces
        name: ICommunicationInterfaces
        nameWithType: ICommunicationInterfaces
        qualifiedName: VST.Device.LightingController.ICommunicationInterfaces
      VB:
      - id: VST.Device.LightingController.ICommunicationInterfaces
        name: ICommunicationInterfaces
        nameWithType: ICommunicationInterfaces
        qualifiedName: VST.Device.LightingController.ICommunicationInterfaces
    isDefinition: true
    parent: VST.Device.LightingController
    commentId: T:VST.Device.LightingController.ICommunicationInterfaces
  VST.Device.LightingController.EthernetLightingController.#ctor*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.#ctor*
        name: EthernetLightingController
        nameWithType: EthernetLightingController.EthernetLightingController
        qualifiedName: VST.Device.LightingController.EthernetLightingController.EthernetLightingController
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.#ctor*
        name: EthernetLightingController
        nameWithType: EthernetLightingController.EthernetLightingController
        qualifiedName: VST.Device.LightingController.EthernetLightingController.EthernetLightingController
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.#ctor
  VST.Device.LightingController.DefaultLightingController.CommandSent:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CommandSent
        name: CommandSent
        nameWithType: DefaultLightingController.CommandSent
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandSent
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CommandSent
        name: CommandSent
        nameWithType: DefaultLightingController.CommandSent
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommandSent
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.CommandSent
  VST.Device.LightingController.EthernetLightingController.CommandSent*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.CommandSent*
        name: CommandSent
        nameWithType: EthernetLightingController.CommandSent
        qualifiedName: VST.Device.LightingController.EthernetLightingController.CommandSent
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.CommandSent*
        name: CommandSent
        nameWithType: EthernetLightingController.CommandSent
        qualifiedName: VST.Device.LightingController.EthernetLightingController.CommandSent
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.CommandSent
  VST.Device.LightingController.DefaultLightingController.HostName:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.HostName
        name: HostName
        nameWithType: DefaultLightingController.HostName
        qualifiedName: VST.Device.LightingController.DefaultLightingController.HostName
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.HostName
        name: HostName
        nameWithType: DefaultLightingController.HostName
        qualifiedName: VST.Device.LightingController.DefaultLightingController.HostName
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.HostName
  VST.Device.LightingController.EthernetLightingController.HostName*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.HostName*
        name: HostName
        nameWithType: EthernetLightingController.HostName
        qualifiedName: VST.Device.LightingController.EthernetLightingController.HostName
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.HostName*
        name: HostName
        nameWithType: EthernetLightingController.HostName
        qualifiedName: VST.Device.LightingController.EthernetLightingController.HostName
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.HostName
  VST.Device.LightingController.DefaultLightingController.Delay:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Delay
        name: Delay
        nameWithType: DefaultLightingController.Delay
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Delay
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Delay
        name: Delay
        nameWithType: DefaultLightingController.Delay
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Delay
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.Delay
  VST.Device.LightingController.EthernetLightingController.Delay*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.Delay*
        name: Delay
        nameWithType: EthernetLightingController.Delay
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Delay
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.Delay*
        name: Delay
        nameWithType: EthernetLightingController.Delay
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Delay
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.Delay
  VST.Device.LightingController.DefaultLightingController.IsConnected:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.IsConnected
        name: IsConnected
        nameWithType: DefaultLightingController.IsConnected
        qualifiedName: VST.Device.LightingController.DefaultLightingController.IsConnected
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.IsConnected
        name: IsConnected
        nameWithType: DefaultLightingController.IsConnected
        qualifiedName: VST.Device.LightingController.DefaultLightingController.IsConnected
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.IsConnected
  VST.Device.LightingController.EthernetLightingController.IsConnected*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.IsConnected*
        name: IsConnected
        nameWithType: EthernetLightingController.IsConnected
        qualifiedName: VST.Device.LightingController.EthernetLightingController.IsConnected
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.IsConnected*
        name: IsConnected
        nameWithType: EthernetLightingController.IsConnected
        qualifiedName: VST.Device.LightingController.EthernetLightingController.IsConnected
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.IsConnected
  System.Net.Sockets:
    name:
      CSharp:
      - name: System.Net.Sockets
        nameWithType: System.Net.Sockets
        qualifiedName: System.Net.Sockets
        isExternal: true
      VB:
      - name: System.Net.Sockets
        nameWithType: System.Net.Sockets
        qualifiedName: System.Net.Sockets
    isDefinition: true
    commentId: N:System.Net.Sockets
  System.Net.Sockets.TcpClient:
    name:
      CSharp:
      - id: System.Net.Sockets.TcpClient
        name: TcpClient
        nameWithType: TcpClient
        qualifiedName: System.Net.Sockets.TcpClient
        isExternal: true
      VB:
      - id: System.Net.Sockets.TcpClient
        name: TcpClient
        nameWithType: TcpClient
        qualifiedName: System.Net.Sockets.TcpClient
        isExternal: true
    isDefinition: true
    parent: System.Net.Sockets
    commentId: T:System.Net.Sockets.TcpClient
  VST.Device.LightingController.EthernetLightingController.Client*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.Client*
        name: Client
        nameWithType: EthernetLightingController.Client
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Client
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.Client*
        name: Client
        nameWithType: EthernetLightingController.Client
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Client
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.Client
  VST.Device.LightingController.IEthernet.Client:
    name:
      CSharp:
      - id: VST.Device.LightingController.IEthernet.Client
        name: Client
        nameWithType: IEthernet.Client
        qualifiedName: VST.Device.LightingController.IEthernet.Client
      VB:
      - id: VST.Device.LightingController.IEthernet.Client
        name: Client
        nameWithType: IEthernet.Client
        qualifiedName: VST.Device.LightingController.IEthernet.Client
    isDefinition: true
    parent: VST.Device.LightingController.IEthernet
    commentId: P:VST.Device.LightingController.IEthernet.Client
  VST.Device.LightingController.DefaultLightingController.CommunicationInterface:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
        name: CommunicationInterface
        nameWithType: DefaultLightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
        name: CommunicationInterface
        nameWithType: DefaultLightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.DefaultLightingController.CommunicationInterface
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: P:VST.Device.LightingController.DefaultLightingController.CommunicationInterface
  VST.Device.LightingController.EthernetLightingController.CommunicationInterface*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.CommunicationInterface*
        name: CommunicationInterface
        nameWithType: EthernetLightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.EthernetLightingController.CommunicationInterface
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.CommunicationInterface*
        name: CommunicationInterface
        nameWithType: EthernetLightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.EthernetLightingController.CommunicationInterface
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.CommunicationInterface
  VST.Device.LightingController.DefaultLightingController.Open(System.String):
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Open(System.String)
        name: Open
        nameWithType: DefaultLightingController.Open
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Open
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Open(System.String)
        name: Open
        nameWithType: DefaultLightingController.Open
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Open
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.Open(System.String)
  VST.Device.LightingController.EthernetLightingController.Open*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.Open*
        name: Open
        nameWithType: EthernetLightingController.Open
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Open
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.Open*
        name: Open
        nameWithType: EthernetLightingController.Open
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Open
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.Open
  VST.Device.LightingController.EthernetLightingController.ChangeIP*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.ChangeIP*
        name: ChangeIP
        nameWithType: EthernetLightingController.ChangeIP
        qualifiedName: VST.Device.LightingController.EthernetLightingController.ChangeIP
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.ChangeIP*
        name: ChangeIP
        nameWithType: EthernetLightingController.ChangeIP
        qualifiedName: VST.Device.LightingController.EthernetLightingController.ChangeIP
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.ChangeIP
  VST.Device.LightingController.IEthernet.ChangeIP(System.String):
    name:
      CSharp:
      - id: VST.Device.LightingController.IEthernet.ChangeIP(System.String)
        name: ChangeIP
        nameWithType: IEthernet.ChangeIP
        qualifiedName: VST.Device.LightingController.IEthernet.ChangeIP
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.IEthernet.ChangeIP(System.String)
        name: ChangeIP
        nameWithType: IEthernet.ChangeIP
        qualifiedName: VST.Device.LightingController.IEthernet.ChangeIP
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.IEthernet
    commentId: M:VST.Device.LightingController.IEthernet.ChangeIP(System.String)
  VST.Device.LightingController.DefaultLightingController.Close:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Close
        name: Close
        nameWithType: DefaultLightingController.Close
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Close
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Close
        name: Close
        nameWithType: DefaultLightingController.Close
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Close
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.Close
  VST.Device.LightingController.EthernetLightingController.Close*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.Close*
        name: Close
        nameWithType: EthernetLightingController.Close
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Close
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.Close*
        name: Close
        nameWithType: EthernetLightingController.Close
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Close
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.Close
  VST.Device.LightingController.DefaultLightingController.SendCommand(System.String):
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SendCommand(System.String)
        name: SendCommand
        nameWithType: DefaultLightingController.SendCommand
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SendCommand
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SendCommand(System.String)
        name: SendCommand
        nameWithType: DefaultLightingController.SendCommand
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SendCommand
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.SendCommand(System.String)
  VST.Device.LightingController.EthernetLightingController.SendCommand*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.SendCommand*
        name: SendCommand
        nameWithType: EthernetLightingController.SendCommand
        qualifiedName: VST.Device.LightingController.EthernetLightingController.SendCommand
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.SendCommand*
        name: SendCommand
        nameWithType: EthernetLightingController.SendCommand
        qualifiedName: VST.Device.LightingController.EthernetLightingController.SendCommand
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.SendCommand
  VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32,System.Int32):
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32,System.Int32)
        name: SetIntensity
        nameWithType: DefaultLightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32,System.Int32)
        name: SetIntensity
        nameWithType: DefaultLightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetIntensity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.SetIntensity(System.Int32,System.Int32)
  VST.Device.LightingController.EthernetLightingController.SetIntensity*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.SetIntensity*
        name: SetIntensity
        nameWithType: EthernetLightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.EthernetLightingController.SetIntensity
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.SetIntensity*
        name: SetIntensity
        nameWithType: EthernetLightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.EthernetLightingController.SetIntensity
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.SetIntensity
  VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes):
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: DefaultLightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
        name: SetStrobeMode
        nameWithType: DefaultLightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetStrobeMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: VST.Device.LightingController.StrobeModes
        name: StrobeModes
        nameWithType: StrobeModes
        qualifiedName: VST.Device.LightingController.StrobeModes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.SetStrobeMode(System.Int32,VST.Device.LightingController.StrobeModes)
  VST.Device.LightingController.EthernetLightingController.SetStrobeMode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: EthernetLightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.EthernetLightingController.SetStrobeMode
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: EthernetLightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.EthernetLightingController.SetStrobeMode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.SetStrobeMode
  VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32,System.Boolean)
        name: SetOnOff
        nameWithType: DefaultLightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32,System.Boolean)
        name: SetOnOff
        nameWithType: DefaultLightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.DefaultLightingController.SetOnOff
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.SetOnOff(System.Int32,System.Boolean)
  VST.Device.LightingController.EthernetLightingController.SetOnOff*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.SetOnOff*
        name: SetOnOff
        nameWithType: EthernetLightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.EthernetLightingController.SetOnOff
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.SetOnOff*
        name: SetOnOff
        nameWithType: EthernetLightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.EthernetLightingController.SetOnOff
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.SetOnOff
  VST.Device.LightingController.DefaultLightingController.Initialize:
    name:
      CSharp:
      - id: VST.Device.LightingController.DefaultLightingController.Initialize
        name: Initialize
        nameWithType: DefaultLightingController.Initialize
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: VST.Device.LightingController.DefaultLightingController.Initialize
        name: Initialize
        nameWithType: DefaultLightingController.Initialize
        qualifiedName: VST.Device.LightingController.DefaultLightingController.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: VST.Device.LightingController.DefaultLightingController
    commentId: M:VST.Device.LightingController.DefaultLightingController.Initialize
  VST.Device.LightingController.EthernetLightingController.Initialize*:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController.Initialize*
        name: Initialize
        nameWithType: EthernetLightingController.Initialize
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Initialize
      VB:
      - id: VST.Device.LightingController.EthernetLightingController.Initialize*
        name: Initialize
        nameWithType: EthernetLightingController.Initialize
        qualifiedName: VST.Device.LightingController.EthernetLightingController.Initialize
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.EthernetLightingController.Initialize
  VST.Device.LightingController.EthernetLightingController:
    name:
      CSharp:
      - id: VST.Device.LightingController.EthernetLightingController
        name: EthernetLightingController
        nameWithType: EthernetLightingController
        qualifiedName: VST.Device.LightingController.EthernetLightingController
      VB:
      - id: VST.Device.LightingController.EthernetLightingController
        name: EthernetLightingController
        nameWithType: EthernetLightingController
        qualifiedName: VST.Device.LightingController.EthernetLightingController
    isDefinition: true
    commentId: T:VST.Device.LightingController.EthernetLightingController
  VST.Device.LightingController.IChannelController.Index*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.Index*
        name: Index
        nameWithType: IChannelController.Index
        qualifiedName: VST.Device.LightingController.IChannelController.Index
      VB:
      - id: VST.Device.LightingController.IChannelController.Index*
        name: Index
        nameWithType: IChannelController.Index
        qualifiedName: VST.Device.LightingController.IChannelController.Index
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IChannelController.Index
  VST.Device.LightingController.IChannelController.IsOn*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.IsOn*
        name: IsOn
        nameWithType: IChannelController.IsOn
        qualifiedName: VST.Device.LightingController.IChannelController.IsOn
      VB:
      - id: VST.Device.LightingController.IChannelController.IsOn*
        name: IsOn
        nameWithType: IChannelController.IsOn
        qualifiedName: VST.Device.LightingController.IChannelController.IsOn
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IChannelController.IsOn
  VST.Device.LightingController.IChannelController.Mode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.Mode*
        name: Mode
        nameWithType: IChannelController.Mode
        qualifiedName: VST.Device.LightingController.IChannelController.Mode
      VB:
      - id: VST.Device.LightingController.IChannelController.Mode*
        name: Mode
        nameWithType: IChannelController.Mode
        qualifiedName: VST.Device.LightingController.IChannelController.Mode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IChannelController.Mode
  VST.Device.LightingController.IChannelController.Intensity*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.Intensity*
        name: Intensity
        nameWithType: IChannelController.Intensity
        qualifiedName: VST.Device.LightingController.IChannelController.Intensity
      VB:
      - id: VST.Device.LightingController.IChannelController.Intensity*
        name: Intensity
        nameWithType: IChannelController.Intensity
        qualifiedName: VST.Device.LightingController.IChannelController.Intensity
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IChannelController.Intensity
  VST.Device.LightingController.IChannelController.Owner*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.Owner*
        name: Owner
        nameWithType: IChannelController.Owner
        qualifiedName: VST.Device.LightingController.IChannelController.Owner
      VB:
      - id: VST.Device.LightingController.IChannelController.Owner*
        name: Owner
        nameWithType: IChannelController.Owner
        qualifiedName: VST.Device.LightingController.IChannelController.Owner
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IChannelController.Owner
  VST.Device.LightingController.IChannelController.SendCommand*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.SendCommand*
        name: SendCommand
        nameWithType: IChannelController.SendCommand
        qualifiedName: VST.Device.LightingController.IChannelController.SendCommand
      VB:
      - id: VST.Device.LightingController.IChannelController.SendCommand*
        name: SendCommand
        nameWithType: IChannelController.SendCommand
        qualifiedName: VST.Device.LightingController.IChannelController.SendCommand
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IChannelController.SendCommand
  VST.Device.LightingController.IChannelController.SetIntensity*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.SetIntensity*
        name: SetIntensity
        nameWithType: IChannelController.SetIntensity
        qualifiedName: VST.Device.LightingController.IChannelController.SetIntensity
      VB:
      - id: VST.Device.LightingController.IChannelController.SetIntensity*
        name: SetIntensity
        nameWithType: IChannelController.SetIntensity
        qualifiedName: VST.Device.LightingController.IChannelController.SetIntensity
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IChannelController.SetIntensity
  VST.Device.LightingController.IChannelController.SetStrobeMode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: IChannelController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.IChannelController.SetStrobeMode
      VB:
      - id: VST.Device.LightingController.IChannelController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: IChannelController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.IChannelController.SetStrobeMode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IChannelController.SetStrobeMode
  VST.Device.LightingController.IChannelController.SetOnOff*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IChannelController.SetOnOff*
        name: SetOnOff
        nameWithType: IChannelController.SetOnOff
        qualifiedName: VST.Device.LightingController.IChannelController.SetOnOff
      VB:
      - id: VST.Device.LightingController.IChannelController.SetOnOff*
        name: SetOnOff
        nameWithType: IChannelController.SetOnOff
        qualifiedName: VST.Device.LightingController.IChannelController.SetOnOff
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IChannelController.SetOnOff
  System.IO.Ports:
    name:
      CSharp:
      - name: System.IO.Ports
        nameWithType: System.IO.Ports
        qualifiedName: System.IO.Ports
        isExternal: true
      VB:
      - name: System.IO.Ports
        nameWithType: System.IO.Ports
        qualifiedName: System.IO.Ports
    isDefinition: true
    commentId: N:System.IO.Ports
  System.IO.Ports.SerialPort:
    name:
      CSharp:
      - id: System.IO.Ports.SerialPort
        name: SerialPort
        nameWithType: SerialPort
        qualifiedName: System.IO.Ports.SerialPort
        isExternal: true
      VB:
      - id: System.IO.Ports.SerialPort
        name: SerialPort
        nameWithType: SerialPort
        qualifiedName: System.IO.Ports.SerialPort
        isExternal: true
    isDefinition: true
    parent: System.IO.Ports
    commentId: T:System.IO.Ports.SerialPort
  VST.Device.LightingController.IRS232.Port*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IRS232.Port*
        name: Port
        nameWithType: IRS232.Port
        qualifiedName: VST.Device.LightingController.IRS232.Port
      VB:
      - id: VST.Device.LightingController.IRS232.Port*
        name: Port
        nameWithType: IRS232.Port
        qualifiedName: VST.Device.LightingController.IRS232.Port
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IRS232.Port
  VST.Device.LightingController.IRS232:
    name:
      CSharp:
      - id: VST.Device.LightingController.IRS232
        name: IRS232
        nameWithType: IRS232
        qualifiedName: VST.Device.LightingController.IRS232
      VB:
      - id: VST.Device.LightingController.IRS232
        name: IRS232
        nameWithType: IRS232
        qualifiedName: VST.Device.LightingController.IRS232
    isDefinition: true
    parent: VST.Device.LightingController
    commentId: T:VST.Device.LightingController.IRS232
  VST.Device.LightingController.IEthernet.Client*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IEthernet.Client*
        name: Client
        nameWithType: IEthernet.Client
        qualifiedName: VST.Device.LightingController.IEthernet.Client
      VB:
      - id: VST.Device.LightingController.IEthernet.Client*
        name: Client
        nameWithType: IEthernet.Client
        qualifiedName: VST.Device.LightingController.IEthernet.Client
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IEthernet.Client
  VST.Device.LightingController.IEthernet.ChangeIP*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IEthernet.ChangeIP*
        name: ChangeIP
        nameWithType: IEthernet.ChangeIP
        qualifiedName: VST.Device.LightingController.IEthernet.ChangeIP
      VB:
      - id: VST.Device.LightingController.IEthernet.ChangeIP*
        name: ChangeIP
        nameWithType: IEthernet.ChangeIP
        qualifiedName: VST.Device.LightingController.IEthernet.ChangeIP
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IEthernet.ChangeIP
  VST.Device.LightingController.IInitialize.Initialize*:
    name:
      CSharp:
      - id: VST.Device.LightingController.IInitialize.Initialize*
        name: Initialize
        nameWithType: IInitialize.Initialize
        qualifiedName: VST.Device.LightingController.IInitialize.Initialize
      VB:
      - id: VST.Device.LightingController.IInitialize.Initialize*
        name: Initialize
        nameWithType: IInitialize.Initialize
        qualifiedName: VST.Device.LightingController.IInitialize.Initialize
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.IInitialize.Initialize
  VST.Device.LightingController.ILightingController.CommandSent*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CommandSent*
        name: CommandSent
        nameWithType: ILightingController.CommandSent
        qualifiedName: VST.Device.LightingController.ILightingController.CommandSent
      VB:
      - id: VST.Device.LightingController.ILightingController.CommandSent*
        name: CommandSent
        nameWithType: ILightingController.CommandSent
        qualifiedName: VST.Device.LightingController.ILightingController.CommandSent
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.CommandSent
  VST.Device.LightingController.ILightingController.HostName*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.HostName*
        name: HostName
        nameWithType: ILightingController.HostName
        qualifiedName: VST.Device.LightingController.ILightingController.HostName
      VB:
      - id: VST.Device.LightingController.ILightingController.HostName*
        name: HostName
        nameWithType: ILightingController.HostName
        qualifiedName: VST.Device.LightingController.ILightingController.HostName
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.HostName
  VST.Device.LightingController.ILightingController.Delay*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.Delay*
        name: Delay
        nameWithType: ILightingController.Delay
        qualifiedName: VST.Device.LightingController.ILightingController.Delay
      VB:
      - id: VST.Device.LightingController.ILightingController.Delay*
        name: Delay
        nameWithType: ILightingController.Delay
        qualifiedName: VST.Device.LightingController.ILightingController.Delay
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.Delay
  VST.Device.LightingController.ILightingController.IsConnected*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.IsConnected*
        name: IsConnected
        nameWithType: ILightingController.IsConnected
        qualifiedName: VST.Device.LightingController.ILightingController.IsConnected
      VB:
      - id: VST.Device.LightingController.ILightingController.IsConnected*
        name: IsConnected
        nameWithType: ILightingController.IsConnected
        qualifiedName: VST.Device.LightingController.ILightingController.IsConnected
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.IsConnected
  VST.Device.LightingController.ILightingController.ModelName*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.ModelName*
        name: ModelName
        nameWithType: ILightingController.ModelName
        qualifiedName: VST.Device.LightingController.ILightingController.ModelName
      VB:
      - id: VST.Device.LightingController.ILightingController.ModelName*
        name: ModelName
        nameWithType: ILightingController.ModelName
        qualifiedName: VST.Device.LightingController.ILightingController.ModelName
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.ModelName
  VST.Device.LightingController.ILightingController.StrobeMode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.StrobeMode*
        name: StrobeMode
        nameWithType: ILightingController.StrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.StrobeMode
      VB:
      - id: VST.Device.LightingController.ILightingController.StrobeMode*
        name: StrobeMode
        nameWithType: ILightingController.StrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.StrobeMode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.StrobeMode
  VST.Device.LightingController.ILightingController.CommunicationInterface*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CommunicationInterface*
        name: CommunicationInterface
        nameWithType: ILightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.ILightingController.CommunicationInterface
      VB:
      - id: VST.Device.LightingController.ILightingController.CommunicationInterface*
        name: CommunicationInterface
        nameWithType: ILightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.ILightingController.CommunicationInterface
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.CommunicationInterface
  VST.Device.LightingController.ILightingController.Item*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.Item*
        name: Item
        nameWithType: ILightingController.Item
        qualifiedName: VST.Device.LightingController.ILightingController.Item
      VB:
      - id: VST.Device.LightingController.ILightingController.Item*
        name: Item
        nameWithType: ILightingController.Item
        qualifiedName: VST.Device.LightingController.ILightingController.Item
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.Item
  VST.Device.LightingController.ILightingController.ChannelCount*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.ChannelCount*
        name: ChannelCount
        nameWithType: ILightingController.ChannelCount
        qualifiedName: VST.Device.LightingController.ILightingController.ChannelCount
      VB:
      - id: VST.Device.LightingController.ILightingController.ChannelCount*
        name: ChannelCount
        nameWithType: ILightingController.ChannelCount
        qualifiedName: VST.Device.LightingController.ILightingController.ChannelCount
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.ChannelCount
  VST.Device.LightingController.ILightingController.CommandHeaderStr*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CommandHeaderStr*
        name: CommandHeaderStr
        nameWithType: ILightingController.CommandHeaderStr
        qualifiedName: VST.Device.LightingController.ILightingController.CommandHeaderStr
      VB:
      - id: VST.Device.LightingController.ILightingController.CommandHeaderStr*
        name: CommandHeaderStr
        nameWithType: ILightingController.CommandHeaderStr
        qualifiedName: VST.Device.LightingController.ILightingController.CommandHeaderStr
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.CommandHeaderStr
  VST.Device.LightingController.ILightingController.CommandEndStr*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CommandEndStr*
        name: CommandEndStr
        nameWithType: ILightingController.CommandEndStr
        qualifiedName: VST.Device.LightingController.ILightingController.CommandEndStr
      VB:
      - id: VST.Device.LightingController.ILightingController.CommandEndStr*
        name: CommandEndStr
        nameWithType: ILightingController.CommandEndStr
        qualifiedName: VST.Device.LightingController.ILightingController.CommandEndStr
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.CommandEndStr
  VST.Device.LightingController.ILightingController.SendCommand*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SendCommand*
        name: SendCommand
        nameWithType: ILightingController.SendCommand
        qualifiedName: VST.Device.LightingController.ILightingController.SendCommand
      VB:
      - id: VST.Device.LightingController.ILightingController.SendCommand*
        name: SendCommand
        nameWithType: ILightingController.SendCommand
        qualifiedName: VST.Device.LightingController.ILightingController.SendCommand
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.SendCommand
  VST.Device.LightingController.ILightingController.Open*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.Open*
        name: Open
        nameWithType: ILightingController.Open
        qualifiedName: VST.Device.LightingController.ILightingController.Open
      VB:
      - id: VST.Device.LightingController.ILightingController.Open*
        name: Open
        nameWithType: ILightingController.Open
        qualifiedName: VST.Device.LightingController.ILightingController.Open
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.Open
  VST.Device.LightingController.ILightingController.Close*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.Close*
        name: Close
        nameWithType: ILightingController.Close
        qualifiedName: VST.Device.LightingController.ILightingController.Close
      VB:
      - id: VST.Device.LightingController.ILightingController.Close*
        name: Close
        nameWithType: ILightingController.Close
        qualifiedName: VST.Device.LightingController.ILightingController.Close
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.Close
  VST.Device.LightingController.ILightingController.SetIntensity*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SetIntensity*
        name: SetIntensity
        nameWithType: ILightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.ILightingController.SetIntensity
      VB:
      - id: VST.Device.LightingController.ILightingController.SetIntensity*
        name: SetIntensity
        nameWithType: ILightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.ILightingController.SetIntensity
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.SetIntensity
  VST.Device.LightingController.ILightingController.SetStrobeMode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: ILightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.SetStrobeMode
      VB:
      - id: VST.Device.LightingController.ILightingController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: ILightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.ILightingController.SetStrobeMode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.SetStrobeMode
  VST.Device.LightingController.ILightingController.SetOnOff*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.SetOnOff*
        name: SetOnOff
        nameWithType: ILightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.ILightingController.SetOnOff
      VB:
      - id: VST.Device.LightingController.ILightingController.SetOnOff*
        name: SetOnOff
        nameWithType: ILightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.ILightingController.SetOnOff
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.SetOnOff
  VST.Device.LightingController.ILightingController.CheckSum*:
    name:
      CSharp:
      - id: VST.Device.LightingController.ILightingController.CheckSum*
        name: CheckSum
        nameWithType: ILightingController.CheckSum
        qualifiedName: VST.Device.LightingController.ILightingController.CheckSum
      VB:
      - id: VST.Device.LightingController.ILightingController.CheckSum*
        name: CheckSum
        nameWithType: ILightingController.CheckSum
        qualifiedName: VST.Device.LightingController.ILightingController.CheckSum
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.ILightingController.CheckSum
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  VST.Device.LightingController.LightingControllerProvider.ModelList*:
    name:
      CSharp:
      - id: VST.Device.LightingController.LightingControllerProvider.ModelList*
        name: ModelList
        nameWithType: LightingControllerProvider.ModelList
        qualifiedName: VST.Device.LightingController.LightingControllerProvider.ModelList
      VB:
      - id: VST.Device.LightingController.LightingControllerProvider.ModelList*
        name: ModelList
        nameWithType: LightingControllerProvider.ModelList
        qualifiedName: VST.Device.LightingController.LightingControllerProvider.ModelList
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.LightingControllerProvider.ModelList
  VST.Device.LightingController.LightingControllerProvider.GetController*:
    name:
      CSharp:
      - id: VST.Device.LightingController.LightingControllerProvider.GetController*
        name: GetController
        nameWithType: LightingControllerProvider.GetController
        qualifiedName: VST.Device.LightingController.LightingControllerProvider.GetController
      VB:
      - id: VST.Device.LightingController.LightingControllerProvider.GetController*
        name: GetController
        nameWithType: LightingControllerProvider.GetController
        qualifiedName: VST.Device.LightingController.LightingControllerProvider.GetController
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.LightingControllerProvider.GetController
  VST.Device.LightingController.LightingControllerProvider:
    name:
      CSharp:
      - id: VST.Device.LightingController.LightingControllerProvider
        name: LightingControllerProvider
        nameWithType: LightingControllerProvider
        qualifiedName: VST.Device.LightingController.LightingControllerProvider
      VB:
      - id: VST.Device.LightingController.LightingControllerProvider
        name: LightingControllerProvider
        nameWithType: LightingControllerProvider
        qualifiedName: VST.Device.LightingController.LightingControllerProvider
    isDefinition: true
    commentId: T:VST.Device.LightingController.LightingControllerProvider
  VST.Device.LightingController.Rs232LightingController.#ctor*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.#ctor*
        name: Rs232LightingController
        nameWithType: Rs232LightingController.Rs232LightingController
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Rs232LightingController
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.#ctor*
        name: Rs232LightingController
        nameWithType: Rs232LightingController.Rs232LightingController
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Rs232LightingController
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.#ctor
  VST.Device.LightingController.Rs232LightingController.IsConnected*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.IsConnected*
        name: IsConnected
        nameWithType: Rs232LightingController.IsConnected
        qualifiedName: VST.Device.LightingController.Rs232LightingController.IsConnected
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.IsConnected*
        name: IsConnected
        nameWithType: Rs232LightingController.IsConnected
        qualifiedName: VST.Device.LightingController.Rs232LightingController.IsConnected
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.IsConnected
  VST.Device.LightingController.Rs232LightingController.CommunicationInterface*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.CommunicationInterface*
        name: CommunicationInterface
        nameWithType: Rs232LightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.Rs232LightingController.CommunicationInterface
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.CommunicationInterface*
        name: CommunicationInterface
        nameWithType: Rs232LightingController.CommunicationInterface
        qualifiedName: VST.Device.LightingController.Rs232LightingController.CommunicationInterface
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.CommunicationInterface
  VST.Device.LightingController.Rs232LightingController.CommandSent*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.CommandSent*
        name: CommandSent
        nameWithType: Rs232LightingController.CommandSent
        qualifiedName: VST.Device.LightingController.Rs232LightingController.CommandSent
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.CommandSent*
        name: CommandSent
        nameWithType: Rs232LightingController.CommandSent
        qualifiedName: VST.Device.LightingController.Rs232LightingController.CommandSent
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.CommandSent
  VST.Device.LightingController.Rs232LightingController.HostName*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.HostName*
        name: HostName
        nameWithType: Rs232LightingController.HostName
        qualifiedName: VST.Device.LightingController.Rs232LightingController.HostName
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.HostName*
        name: HostName
        nameWithType: Rs232LightingController.HostName
        qualifiedName: VST.Device.LightingController.Rs232LightingController.HostName
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.HostName
  VST.Device.LightingController.Rs232LightingController.Delay*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.Delay*
        name: Delay
        nameWithType: Rs232LightingController.Delay
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Delay
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.Delay*
        name: Delay
        nameWithType: Rs232LightingController.Delay
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Delay
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.Delay
  VST.Device.LightingController.Rs232LightingController.Port*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.Port*
        name: Port
        nameWithType: Rs232LightingController.Port
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Port
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.Port*
        name: Port
        nameWithType: Rs232LightingController.Port
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Port
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.Port
  VST.Device.LightingController.IRS232.Port:
    name:
      CSharp:
      - id: VST.Device.LightingController.IRS232.Port
        name: Port
        nameWithType: IRS232.Port
        qualifiedName: VST.Device.LightingController.IRS232.Port
      VB:
      - id: VST.Device.LightingController.IRS232.Port
        name: Port
        nameWithType: IRS232.Port
        qualifiedName: VST.Device.LightingController.IRS232.Port
    isDefinition: true
    parent: VST.Device.LightingController.IRS232
    commentId: P:VST.Device.LightingController.IRS232.Port
  VST.Device.LightingController.Rs232LightingController.Open*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.Open*
        name: Open
        nameWithType: Rs232LightingController.Open
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Open
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.Open*
        name: Open
        nameWithType: Rs232LightingController.Open
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Open
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.Open
  VST.Device.LightingController.Rs232LightingController.Close*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.Close*
        name: Close
        nameWithType: Rs232LightingController.Close
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Close
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.Close*
        name: Close
        nameWithType: Rs232LightingController.Close
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Close
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.Close
  VST.Device.LightingController.Rs232LightingController.SendCommand*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.SendCommand*
        name: SendCommand
        nameWithType: Rs232LightingController.SendCommand
        qualifiedName: VST.Device.LightingController.Rs232LightingController.SendCommand
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.SendCommand*
        name: SendCommand
        nameWithType: Rs232LightingController.SendCommand
        qualifiedName: VST.Device.LightingController.Rs232LightingController.SendCommand
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.SendCommand
  VST.Device.LightingController.Rs232LightingController.SetIntensity*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.SetIntensity*
        name: SetIntensity
        nameWithType: Rs232LightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.Rs232LightingController.SetIntensity
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.SetIntensity*
        name: SetIntensity
        nameWithType: Rs232LightingController.SetIntensity
        qualifiedName: VST.Device.LightingController.Rs232LightingController.SetIntensity
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.SetIntensity
  VST.Device.LightingController.Rs232LightingController.SetStrobeMode*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: Rs232LightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.Rs232LightingController.SetStrobeMode
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.SetStrobeMode*
        name: SetStrobeMode
        nameWithType: Rs232LightingController.SetStrobeMode
        qualifiedName: VST.Device.LightingController.Rs232LightingController.SetStrobeMode
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.SetStrobeMode
  VST.Device.LightingController.Rs232LightingController.SetOnOff*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.SetOnOff*
        name: SetOnOff
        nameWithType: Rs232LightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.Rs232LightingController.SetOnOff
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.SetOnOff*
        name: SetOnOff
        nameWithType: Rs232LightingController.SetOnOff
        qualifiedName: VST.Device.LightingController.Rs232LightingController.SetOnOff
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.SetOnOff
  VST.Device.LightingController.Rs232LightingController.Initialize*:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController.Initialize*
        name: Initialize
        nameWithType: Rs232LightingController.Initialize
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Initialize
      VB:
      - id: VST.Device.LightingController.Rs232LightingController.Initialize*
        name: Initialize
        nameWithType: Rs232LightingController.Initialize
        qualifiedName: VST.Device.LightingController.Rs232LightingController.Initialize
    isDefinition: true
    commentId: Overload:VST.Device.LightingController.Rs232LightingController.Initialize
  VST.Device.LightingController.Rs232LightingController:
    name:
      CSharp:
      - id: VST.Device.LightingController.Rs232LightingController
        name: Rs232LightingController
        nameWithType: Rs232LightingController
        qualifiedName: VST.Device.LightingController.Rs232LightingController
      VB:
      - id: VST.Device.LightingController.Rs232LightingController
        name: Rs232LightingController
        nameWithType: Rs232LightingController
        qualifiedName: VST.Device.LightingController.Rs232LightingController
    isDefinition: true
    commentId: T:VST.Device.LightingController.Rs232LightingController
